{"version":3,"sources":["components/contact/LocationMap.js","pages/other/Contact.js"],"names":["GoogleApiWrapper","apiKey","window","_env_","APP_MAP_API_KEY","props","_useState","useState","_useState2","_slicedToArray","latitude","setLatitude","_useState3","_useState4","longitude","setLongitude","geocoder","google","maps","Geocoder","address","merchant","city","geocode","results","status","GeocoderStatus","OK","geometry","location","lat","lng","handleScriptLoad","_jsx","children","Map","zoom","style","width","height","initialCenter","Marker","position","icon","url","concat","animation","Animation","BOUNCE","contactForm","name","validate","required","value","message","pattern","connect","state","merchantData","dispatch","setLoader","multilanguage","_ref","strings","currentLanguageCode","setMessage","pathname","addToast","useToasts","_useForm","useForm","mode","register","handleSubmit","errors","reset","useEffect","getContentMessage","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","action","response","wrap","_context","prev","next","constant","ACTION","CONTENT","BOXES","AVAILABILITY","WebService","get","sent","description","t0","console","log","stop","apply","arguments","onSubmitContactForm","_ref3","_callee2","data","param","_context2","CONTACT","comment","email","subject","post","appearance","autoDismiss","_x","_jsxs","Fragment","MetaTags","BreadcrumbsItem","to","process","Layout","headerContainerClass","headerPaddingClass","headerTop","Breadcrumb","className","LocationMap","phone","href","stateProvince","country","postalCode","dangerouslySetInnerHTML","__html","replace","onSubmit","type","ref","placeholder"],"mappings":"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","file":"static/js/25.28029320.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\r\nimport { PropTypes } from \"prop-types\";\r\n\r\nconst FooterMap = props => {\r\n  const mapStyles = {\r\n    width: \"100%\",\r\n    height: \"100%\"\r\n  };\r\n  const [latitude, setLatitude] = useState(0);\r\n  const [longitude, setLongitude] = useState(0);\r\n  const handleScriptLoad = () => {\r\n    // Initialize Google Autocomplete\r\n    /*global google*/ // To disable any eslint 'google not defined' errors\r\n    var geocoder = new google.maps.Geocoder();\r\n    let address = props.merchant.address.address + props.merchant.address.city\r\n    geocoder.geocode({\r\n      'address': address\r\n    }, function (results, status) {\r\n      if (status === google.maps.GeocoderStatus.OK) {\r\n        // console.log(results[0].geometry.location.lat())\r\n        // console.log(results[0].geometry.location.lng())\r\n        setLatitude(results[0].geometry.location.lat());\r\n        setLongitude(results[0].geometry.location.lng());\r\n      } else {\r\n      }\r\n    });\r\n  }\r\n  // setTimeout(() => {\r\n  handleScriptLoad()\r\n  // }, 2000);\r\n  return (\r\n\r\n    <div>\r\n      {\r\n        latitude !== 0 && longitude !== 0 &&\r\n        <Map\r\n          google={props.google}\r\n          zoom={10}\r\n          style={mapStyles}\r\n          initialCenter={{ lat: latitude, lng: longitude }}\r\n        >\r\n          <Marker\r\n            position={{ lat: latitude, lng: longitude }}\r\n            icon={{\r\n              url: `${process.env.PUBLIC_URL + \"/assets/img/icon-img/2.png\"}`\r\n            }}\r\n            animation={props.google.maps.Animation.BOUNCE}\r\n          />\r\n        </Map>\r\n      }\r\n    </div>\r\n\r\n\r\n  );\r\n};\r\n\r\nFooterMap.propTypes = {\r\n  google: PropTypes.object\r\n};\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: window._env_.APP_MAP_API_KEY\r\n})(FooterMap);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport MetaTags from \"react-meta-tags\";\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport Layout from \"../../layouts/Layout\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport LocationMap from \"../../components/contact/LocationMap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { connect } from \"react-redux\";\r\nimport WebService from '../../util/webService';\r\nimport constant from '../../util/constant';\r\nimport { setLoader } from \"../../redux/actions/loaderActions\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\n\r\nconst contactForm = {\r\n  email: {\r\n    name: \"email\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Email is required\"\r\n      },\r\n      pattern: {\r\n        value: /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i,\r\n        message: 'Please entered the valid email id'\r\n      }\r\n    }\r\n  },\r\n  username: {\r\n    name: \"username\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Name is required\"\r\n      }\r\n    }\r\n  },\r\n  subject: {\r\n    name: \"subject\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Subject is required\"\r\n      }\r\n    }\r\n  },\r\n  comment: {\r\n    name: \"comment\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Message is required\"\r\n      }\r\n    }\r\n  }\r\n};\r\nconst Contact = ({ strings, currentLanguageCode, location, merchant, setLoader }) => {\r\n  const [message, setMessage] = useState('')\r\n  const { pathname } = location;\r\n  const { addToast } = useToasts();\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    mode: \"onChange\"\r\n  });\r\n  useEffect(() => {\r\n    getContentMessage();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const getContentMessage = async () => {\r\n    let action = constant.ACTION.CONTENT + constant.ACTION.BOXES + constant.ACTION.AVAILABILITY + '?lang=' + currentLanguageCode;\r\n    try {\r\n      let response = await WebService.get(action);\r\n      if (response) {\r\n        //console.log('Response -> ' + JSON.stringify(response));\r\n        setMessage(response.description.description);\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Content error \" + error );\r\n    }\r\n  }\r\n\r\n  const onSubmitContactForm = async (data) => {\r\n    // console.log(data)\r\n    setLoader(true)\r\n    try {\r\n      let action = constant.ACTION.CONTACT;\r\n      let param = {\r\n        \"comment\": data.comment,\r\n        \"email\": data.email,\r\n        \"name\": data.name,\r\n        \"subject\": data.subject,\r\n      }\r\n      await WebService.post(action, param);\r\n      // console.log(response)\r\n      // if (response) {\r\n      reset({})\r\n      addToast(\"Thank you for getting in touch!\", { appearance: \"success\", autoDismiss: true });\r\n      // }\r\n      setLoader(false)\r\n    } catch (error) {\r\n      setLoader(false)\r\n    }\r\n  }\r\n  return (\r\n    <Fragment>\r\n      <MetaTags>\r\n        <title>{merchant.name} | {strings[\"Contact\"]}</title>\r\n      </MetaTags>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>{strings[\"Home\"]}</BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        {strings[\"Contact\"]}\r\n      </BreadcrumbsItem>\r\n      <Layout headerContainerClass=\"container-fluid\"\r\n        headerPaddingClass=\"header-padding-2\"\r\n        headerTop=\"visible\">\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n        <div className=\"contact-area pt-100 pb-100\">\r\n          <div className=\"container\">\r\n            {\r\n            <div className=\"contact-map mb-10\">\r\n              <LocationMap merchant={merchant} />\r\n            </div>\r\n            }\r\n            <div className=\"custom-row-2\">\r\n              <div className=\"col-lg-4 col-md-5\">\r\n                <div className=\"contact-info-wrap\">\r\n                  <div className=\"single-contact-info\">\r\n                    <div className=\"contact-icon\">\r\n                      <i className=\"fa fa-phone\" />\r\n                    </div>\r\n                    <div className=\"contact-info-dec\">\r\n                      <p>{merchant.phone}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-contact-info\">\r\n                    <div className=\"contact-icon\">\r\n                      <i className=\"fa fa-globe\" />\r\n                    </div>\r\n                    <div className=\"contact-info-dec\">\r\n                      <p>\r\n                        <a href={'mailto:' + merchant.email}>{merchant.email}</a>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"single-contact-info\">\r\n                    <div className=\"contact-icon\">\r\n                      <i className=\"fa fa-map-marker\" />\r\n                    </div>\r\n                    <div className=\"contact-info-dec\">\r\n                      <p>{merchant.address.address} </p>\r\n                      <p>{merchant.address.city}, {merchant.address.stateProvince}, {merchant.address.country}</p>\r\n                      <p>{merchant.address.postalCode}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"contact-social text-center\">\r\n                    <h3>Suivez-nous</h3>\r\n                    <ul>\r\n                      <li>\r\n                        <a href=\"https://www.facebook.com/perfectogazpropane/\">\r\n                          <i className=\"fa fa-facebook\" />\r\n                        </a>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div className=\"contact-info-dec\">\r\n                  <p dangerouslySetInnerHTML={{ __html: message.replace(\"]]>\", \"\") }}></p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-lg-8 col-md-7\">\r\n                <div className=\"contact-form\">\r\n                  <div className=\"contact-title mb-30\">\r\n                    <h2>{strings[\"Get In Touch\"]}</h2>\r\n                  </div>\r\n                  <form className=\"contact-form-style\" onSubmit={handleSubmit(onSubmitContactForm)}>\r\n                    <div className=\"row\">\r\n                      <div className=\"col-lg-6\">\r\n                        <input type=\"text\" name={contactForm.username.name} ref={register(contactForm.username.validate)} placeholder={strings[\"Name\"]} />\r\n                        {errors[contactForm.username.name] && <p className=\"error-msg\">{errors[contactForm.username.name].message}</p>}\r\n                      </div>\r\n                      <div className=\"col-lg-6\">\r\n                        <input name={contactForm.email.name} ref={register(contactForm.email.validate)} placeholder={strings[\"Email address\"]} type=\"email\" />\r\n                        {errors[contactForm.email.name] && <p className=\"error-msg\">{errors[contactForm.email.name].message}</p>}\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <input\r\n                          placeholder={strings[\"Subject\"]}\r\n                          type=\"text\"\r\n                          name={contactForm.subject.name}\r\n                          ref={register(contactForm.subject.validate)}\r\n                        />\r\n                        {errors[contactForm.subject.name] && <p className=\"error-msg\">{errors[contactForm.subject.name].message}</p>}\r\n                      </div>\r\n                      <div className=\"col-lg-12\">\r\n                        <textarea\r\n                          placeholder={strings[\"Your Message\"]}\r\n                          name={contactForm.comment.name}\r\n                          ref={register(contactForm.comment.validate)}\r\n                        />\r\n                        {errors[contactForm.comment.name] && <p className=\"error-msg\">{errors[contactForm.comment.name].message}</p>}\r\n                        <button type=\"submit\" className=\"submit\" >\r\n                          {strings[\"Send\"]}\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </form>\r\n                  <p className=\"form-messege\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Layout>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\n//hostName = () => {\r\n//  return window.location.protocol + \"//\" + window.location.host;\r\n//}\r\n\r\nContact.propTypes = {\r\n  location: PropTypes.object,\r\n  currentLanguageCode: PropTypes.string,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    merchant: state.merchantData.merchant\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setLoader: (value) => {\r\n      dispatch(setLoader(value));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(Contact));\r\n// export default Contact;\r\n"],"sourceRoot":""}