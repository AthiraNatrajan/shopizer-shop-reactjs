{"version":3,"sources":["pages/other/OrderDetails.js"],"names":["connect","state","ownProps","orderID","match","params","id","merchant","merchantData","isLoading","loading","dispatch","setLoader","value","setProductID","multilanguage","_ref","location","strings","pathname","componentRef","useRef","_useState","useState","_useState2","_slicedToArray","orderDetails","setorderDetails","useEffect","getOrderDetails","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","action","response","wrap","_context","prev","next","constant","ACTION","AUTH","ORDERS","WebService","get","sent","t0","console","log","stop","apply","arguments","onClickItem","product","handlePrint","useReactToPrint","content","current","_jsxs","Fragment","children","_jsx","MetaTags","name","BreadcrumbsItem","to","process","Layout","headerContainerClass","headerPaddingClass","headerTop","Breadcrumb","className","ref","isValidObject","style","marginBottom","onClick","padding","fontSize","float","datePurchased","products","map","orderItem","key","Link","description","friendlyUrl","src","image","imageUrl","alt","productName","sku","orderedQuantity","price","subTotal","marginLeft","paymentType","orderStatus","billing","address","city","zone","country","postalCode","shipping","delivery","totals","i","module"],"mappings":"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","file":"static/js/29.cc0d4f27.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { Fragment, useEffect, useState, useRef } from \"react\";\nimport { Link } from \"react-router-dom\";\n// import { useToasts } from \"react-toast-notifications\";\nimport MetaTags from \"react-meta-tags\";\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\nimport { connect } from \"react-redux\";\n// import { getDiscountPrice } from \"../../helpers/product\";\nimport constant from '../../util/constant';\nimport WebService from '../../util/webService';\n// import { addToCart } from \"../../redux/actions/cartActions\";\nimport Layout from \"../../layouts/Layout\";\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\nimport { isValidObject } from \"../../util/helper\";\nimport { multilanguage } from \"redux-multilanguage\";\nimport { setLoader } from \"../../redux/actions/loaderActions\";\nimport { setProductID } from \"../../redux/actions/productActions\";\nimport { useReactToPrint } from 'react-to-print';\nconst OrderDetails = ({\n    location,\n    orderID,\n    strings,\n    setLoader,\n    setProductID,\n    merchant,\n    isLoading\n}) => {\n    // const { addToast } = useToasts();\n    const { pathname } = location;\n    const componentRef = useRef();\n    const [orderDetails, setorderDetails] = useState({});\n    useEffect(() => {\n        getOrderDetails();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const getOrderDetails = async () => {\n        setLoader(true)\n        let action = constant.ACTION.AUTH + constant.ACTION.ORDERS + orderID;\n        try {\n            let response = await WebService.get(action);\n            if (response) {\n                // console.log(response)\n                setorderDetails(response)\n                // // setConfig(response)\n            }\n            setLoader(false)\n        } catch (error) {\n            setLoader(false)\n            console.log(error, '------------')\n        }\n    }\n    const onClickItem = (product) => {\n        // console.log(product);\n        setProductID(product.id)\n    }\n    const handlePrint = useReactToPrint({\n        content: () => componentRef.current,\n    });\n    return (\n        <Fragment>\n            <MetaTags>\n                <title>{merchant.name} | {strings[\"Order Details\"]}</title>\n                {/* <meta\n          name=\"description\"\n          content=\"Wishlist page of flone react minimalist eCommerce template.\"\n        /> */}\n            </MetaTags>\n\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>{strings[\"Home\"]}</BreadcrumbsItem>\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\n                {strings[\"Order Details\"]}\n            </BreadcrumbsItem>\n\n            <Layout headerContainerClass=\"container-fluid\"\n                headerPaddingClass=\"header-padding-2\"\n                headerTop=\"visible\">\n                {/* breadcrumb */}\n                <Breadcrumb />\n\n                <div className=\"cart-main-area pt-90 pb-100\" ref={componentRef}>\n                    <div className=\"container\">\n                        {isValidObject(orderDetails) ? (\n                            <Fragment>\n                                <div className=\"printRow\">\n                                    <h3 className=\"cart-page-title\" style={{ marginBottom: 60 }}>{strings[\"Your orders details\"]}</h3>\n\n                                    <button id=\"printPageButton\" className=\"print-button\" onClick={handlePrint}>Print</button>\n\n                                </div>\n                                <div className=\"row\" >\n                                    <div className=\"col-12\" style={{ marginBottom: 30 }}>\n                                        <div style={{ padding: 15 }}>\n                                            <span style={{ fontSize: 15 }}><b>{strings[\"Order No\"]}</b> #{orderDetails.id}</span>\n                                            <span style={{ fontSize: 15, float: \"right\" }}><b>{strings[\"Order Date\"]}</b> {orderDetails.datePurchased}</span>\n                                        </div>\n                                        <div className=\"table-content table-responsive cart-table-content order-details\">\n                                            <table>\n                                                <thead>\n                                                    <tr>\n                                                        <th>{strings[\"Image\"]}</th>\n                                                        <th>{strings[\"Product Name\"]}</th>\n                                                        <th>{strings[\"Qty\"]}</th>\n                                                        <th>{strings[\"Unit Price\"]}</th>\n                                                        <th>{strings[\"Subtotal\"]}</th>\n                                                    </tr>\n                                                </thead>\n                                                <tbody>\n                                                    {orderDetails.products.map((orderItem, key) => {\n\n                                                        return (\n                                                            <tr key={key} className=\"customTrRow\">\n                                                                <td className=\"product-thumbnail\">\n                                                                    <Link onClick={() => onClickItem(orderItem.product)} to={\"/product/\" + orderItem.product.description.friendlyUrl}>\n                                                                        <img className=\"img-fluid\" src={orderItem.product.image.imageUrl} alt=\"\" />\n                                                                    </Link>\n                                                                </td>\n\n                                                                <td className=\"product-name text-center\">\n                                                                    <Link onClick={() => onClickItem(orderItem.product)} to={\"/product/\" + orderItem.product.description.friendlyUrl}>\n                                                                        {orderItem.productName}\n                                                                    </Link>\n                                                                    <br />\n                                                                    SKU: {orderItem.sku}\n                                                                </td>\n\n                                                                <td className=\"product-price-cart\">\n                                                                    <span className=\"amount\">\n                                                                        {orderItem.orderedQuantity}\n                                                                    </span>\n                                                                </td>\n                                                                <td className=\"product-quantity\">\n                                                                    <span className=\"amount\">\n                                                                        {orderItem.price}\n                                                                    </span>\n                                                                </td>\n                                                                <td className=\"product-subtotal\">\n                                                                    <span className=\"amount\">\n                                                                        {orderItem.subTotal}\n                                                                    </span>\n                                                                </td>\n                                                                {/* <td className=\"product-status\">\n                                                                    <Link to={\"/\"}>\n                                                                        Add to cart\n                                                                    </Link>\n                                                                </td> */}\n                                                            </tr>\n                                                        );\n                                                    })}\n                                                </tbody>\n\n                                            </table>\n\n                                        </div>\n\n                                    </div>\n                                    <div className=\"col-12 custom-payment-shipping-details\">\n                                        <div className=\"col-7\">\n                                            <h3 className=\"cart-page-title\" style={{ marginBottom: 40 }}>{strings[\"Payment & Shipping details\"]}</h3>\n                                            <div style={{ marginBottom: 20 }}>\n                                                <span><b >{strings[\"Payment Methods\"]}</b>{\"    \"} </span><span style={{ marginLeft: 20 }}>{orderDetails.paymentType}</span>\n                                            </div>\n                                            <div style={{ marginBottom: 20 }}>\n                                                <span><b>{strings[\"Order Status\"]}</b>{\" \"}</span><span style={{ marginLeft: 60 }}>{orderDetails.orderStatus}</span>\n                                            </div>\n                                            <div style={{ marginBottom: 20 }}>\n                                                <span><b >{strings[\"Billing Address\"]}</b>{\" \"}</span><span style={{ marginLeft: 44 }}>{orderDetails.billing.address},  {orderDetails.billing.city} {orderDetails.billing.zone} {orderDetails.billing.country}, {orderDetails.billing.postalCode}</span>\n                                            </div>\n                                            {orderDetails.shipping !== null &&\n                                                <div style={{ marginBottom: 20 }}>\n                                                    <span><b >{strings[\"Delivery Address\"]}</b>{\" \"}</span> <span style={{ marginLeft: 30 }}>{orderDetails.delivery.address},  {orderDetails.delivery.city} {orderDetails.delivery.zone} {orderDetails.delivery.country}, {orderDetails.delivery.postalCode}</span>\n                                                </div>\n                                            }\n                                        </div>\n                                        <div className=\"col-5 order-details-total\">\n                                            {\n                                                orderDetails.totals.map((value, i) => {\n                                                    return (\n                                                        <h4 key={i} className=\"amount_type\">\n                                                            <span className=\"amount_module\">{value.module}</span>\n                                                            <span className=\"amount\">\n                                                                US${value.value}\n                                                            </span>\n                                                        </h4>\n                                                    )\n                                                })\n\n                                            }\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </Fragment>\n                        ) : (\n                                !isLoading && <div className=\"row\">\n                                    <div className=\"col-lg-12\">\n                                        <div className=\"item-empty-area text-center\">\n                                            <div className=\"item-empty-area__icon mb-30\">\n                                                <i className=\"pe-7s-shopbag\"></i>\n                                            </div>\n                                            <div className=\"item-empty-area__text\">\n                                                {strings[\"No items found\"]} <br />{\" \"}\n                                                <Link to={\"/\"}>\n                                                    {strings[\"Shop Now\"]}\n                                                </Link>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </Layout>\n        </Fragment>\n    );\n};\n\nOrderDetails.propTypes = {\n    location: PropTypes.object\n};\n\nconst mapStateToProps = (state, ownProps) => {\n    const order_id = ownProps.match.params.id;\n    return {\n        orderID: order_id,\n        merchant: state.merchantData.merchant,\n        isLoading: state.loading.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setLoader: (value) => {\n            dispatch(setLoader(value));\n        },\n        setProductID: (value) => {\n            dispatch(setProductID(value));\n        }\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(OrderDetails));\n"],"sourceRoot":""}