{"version":3,"sources":["redux/actions/contentAction.js","util/constant.js","util/webService.js","util/helper.js","redux/actions/loaderActions.js","redux/actions/cartActions.js","redux/reducers/productReducer.js","redux/reducers/cartReducer.js","redux/reducers/storeReducer.js","redux/reducers/loaderReducer.js","redux/reducers/userReducer.js","redux/reducers/contentReducer.js","redux/reducers/rootReducer.js","helpers/scroll-top.js","components/loader/loader.js","components/consent/Cookie.js","App.js","serviceWorker.js","index.js","redux/actions/userAction.js","redux/actions/productActions.js","redux/actions/storeAction.js"],"names":["SET_CONTENT_ID","setContent","isValue","dispatch","type","payload","Constant","ACTION","STORE","DEFAULT","CATEGORY","FRIENDLYCATEGORY","CONTENT","PAGES","PRODUCT_GROUP","PRODUCT","PRODUCTS","CART","CARTS","PRICE","CUSTOMER","LOGIN","CUSTOMERS","MANUFACTURERS","VARIANTS","CONFIG","COUNTRY","ZONES","AUTH","PROFILE","SHIPPING","SHIPPING_COUNTRY","TOTAL","NEWSLETTER","REGISTER","CHECKOUT","PASSWORD","CONTACT","ORDERS","ADDRESS","RESET","REQUEST","SEARCH","AUTOCOMPLETE","BOXES","BANNER_TEXT","IMAGES","HEADER_MESSAGE","AGREEMENT","PROMO","BASE_URL","window","_env_","APP_BASE_URL","APP_API_VERSION","axios","defaults","baseURL","WebService","action","params","post","response","data","put","get","delete","patch","interceptors","request","use","a","config","getLocalData","token","headers","common","error","Promise","reject","status","setLocalData","key","value","localStorage","setItem","removeLocalData","removeItem","getItem","isCheckValueAndSetParams","isValidObject","items","Object","keys","length","SET_LOADER","setLoader","GET_SHOPIZER_CART_ID","GET_CART","DECREASE_QUANTITY","DELETE_FROM_CART","DELETE_ALL_FROM_CART","addToCart","item","addToast","cartId","quantityCount","defaultStore","userData","selectedProductOptions","console","log","param","undefined","id","JSON","stringify","message","constant","APP_MERCHANT","setShopizerCartID","code","setTimeout","getCart","appearance","autoDismiss","cartID","parse","multilanguage","currentLanguageCode","deleteAllFromCart","cart_cookie","Cookies","set","path","maxAge","deleteFromCart","orderID","initState","products","productid","categoryid","productReducer","state","FETCH_PRODUCTS_SUCCESS","SET_PRODUCT_ID","SET_CATEGORY_ID","cartItems","cartCount","cartReducer","product","assign","quantity","index","findIndex","order","splice","cookies","remove","cart_cookie1","merchant","storeReducer","SET_MERCHANT","SET_STORE","isLoading","loaderReducer","country","shipCountry","shipState","currentAddress","userReducer","SET_USER","SET_COUNTRY","SET_SHIPPING_COUNTRY","SET_STATE","GET_CURRENT_ADDRESS","SET_SHIP_STATE","contentId","contentReducer","rootReducer","combineReducers","createMultilanguageReducer","productData","merchantData","cartData","loading","content","withRouter","props","useEffect","scrollTo","children","connect","size","color","APP_THEME_COLOR","strings","location","style","background","buttonText","buttonStyle","fontSize","padding","Home","lazy","Category","ProductDetail","Contact","MyAccount","LoginRegister","ForgotPassword","ResetPassword","Cart","RecentOrder","OrderDetails","Checkout","NotFound","OrderConfirm","Content","SearchProduct","setCategoryID","resolveUrl","friendly","APP_DEFAULT_LANGUAGE","actualstorage","loadLanguages","languages","en","require","fr","changeLanguage","cookie","document","documentElement","setProperty","placement","fallback","className","exact","component","render","urlPath","href","lastItem","substring","lastIndexOf","to","Boolean","hostname","match","store","createStore","load","composeWithDevTools","applyMiddleware","thunk","save","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister","Geocode","setApiKey","APP_MAP_API_KEY","setLanguage","setUser","getShippingCountry","lang","getState","getShippingState","getCurrentLocation","geolocation","getCurrentPosition","position","getCurrentAddress","coords","latitude","longitude","lat","long","fromLatLng","results","setProductID","productID","categoryID","setMerchant","setStore","storeCode"],"mappings":"gHAAA,oEAAO,IAAMA,EAAiB,iBAEjBC,EAAa,SAACC,GACvB,OAAO,SAAAC,GACHA,EAAS,CACLC,KAAMJ,EACNK,QAASH,O,gCC0CNI,IAhDE,CACbC,OAAQ,CACJC,MAAO,SACPC,QAAS,WACTC,SAAU,YACVC,iBAAkB,iBAClBC,QAAS,WACTC,MAAO,SACPC,cAAe,kBACfC,QAAS,WACTC,SAAU,YACVC,KAAM,QACNC,MAAO,OACPC,MAAO,SACPC,SAAU,YACVC,MAAO,SACPC,UAAW,aACXC,cAAe,iBACfC,SAAU,YACVC,OAAQ,UACRC,QAAS,WACTC,MAAO,SACPC,KAAM,QACNC,QAAS,UACTC,SAAU,WACVC,iBAAkB,mBAClBC,MAAO,SACPC,WAAY,cACZC,SAAU,WACVC,SAAU,WACVC,SAAU,YACVC,QAAS,WACTC,OAAQ,UACRC,QAAS,UACTC,MAAO,SACPC,QAAS,WACTC,OAAQ,UACRC,aAAc,gBACdC,MAAO,SACPC,YAAa,cACbC,OAAQ,UACRC,eAAgB,iBAChBC,UAAW,aACXC,MAAO,Y,yICxCTC,EAAWC,OAAOC,MAAMC,aAAeF,OAAOC,MAAME,gBAC1DC,IAAMC,SAASC,QAAUP,E,IAEJQ,E,gIAGjB,WAAkBC,EAAQC,GAA1B,uFACyBL,IAAMM,KAAKF,EAAQC,GAD5C,cACQE,EADR,yBAEWA,EAASC,MAFpB,2C,iHAIA,WAAiBJ,EAAQC,GAAzB,uFACyBL,IAAMS,IAAIL,EAAQC,GAD3C,cACQE,EADR,yBAEWA,EAASC,MAFpB,2C,iHAIA,WAAiBJ,GAAjB,uFACyBJ,IAAMU,IAAIN,GADnC,cACQG,EADR,yBAEWA,EAASC,MAFpB,2C,kHAIA,WAAoBJ,GAApB,uFACyBJ,IAAMW,OAAOP,GADtC,cACQG,EADR,yBAEWA,EAASC,MAFpB,2C,iHAIA,WAAmBJ,EAAQC,GAA3B,uFACyBL,IAAMY,MAAMR,EAAQC,GAD7C,cACQE,EADR,yBAEWA,EAASC,MAFpB,2C,gEAQJR,IAAMa,aAAaC,QAAQC,IAA3B,+BAAAC,EAAA,MAA+B,WAAOC,GAAP,eAAAD,EAAA,6DAE3BC,EAAOf,QAAUP,EAFU,SAGPuB,YAAa,SAHN,cAGrBC,EAHqB,OAI3BF,EAAOG,QAAQC,OAAf,cAAyCF,EAAQ,UAAYA,EAAQ,GAJ1C,kBAKpBF,GALoB,2CAA/B,uDAMG,SAACK,GAEA,OAAOC,QAAQC,OAAOF,MAI1BtB,IAAMa,aAAaN,SAASQ,KAAI,SAACR,GAI7B,OAAOA,KACR,SAACe,GAKA,IAAQf,EAAae,EAAbf,SAGR,OAAwB,MAApBA,EAASkB,QAAkBlB,EAASkB,OAE7BF,QAAQC,OAAOF,O,gCC5DvB,SAASI,EAAaC,EAAKC,GAChC,IACEC,aAAaC,QAAQH,EAAKC,GAC1B,MAAON,KAKJ,SAASS,EAAgBJ,GAC9B,IACEE,aAAaG,WAAWL,GACxB,MAAOL,KAIJ,SAASJ,EAAaS,GAC3B,IAEE,OADWE,aAAaI,QAAQN,GAEhC,MAAOL,KAWJ,SAASY,EAAyB7B,EAAQuB,GAC/C,MAAuB,qBAAXA,GAAoC,OAAVA,GAA4B,KAAVA,EAC/C,GAEFvB,EAASuB,EASX,SAASO,EAAcC,GAC5B,OAAIC,OAAOC,KAAKF,GAAOG,OAAS,EA5ClC,2K,gCCAA,oEAEO,IAAMC,EAAa,aAEbC,EAAY,SAAC9F,GACtB,OAAO,SAAAC,GACHA,EAAS,CACLC,KAAM2F,EACN1F,QAASH,O,wbCFR+F,EAAuB,uBACvBC,EAAW,WAEXC,EAAoB,oBAEpBC,EAAmB,mBACnBC,EAAuB,uBAGvBC,EAAY,SAACC,EAAMC,EAAUC,EAAQC,EAAeC,EAAcC,EAAUC,GACvF,8CAAO,WAAM1G,GAAN,qBAAAoE,EAAA,yDACLpE,EAAS6F,aAAU,IADd,SAOHc,QAAQC,IAAI,QAAUN,EAAS,aAAeC,GAE5CM,OAD6BC,IAA3BJ,EACM,CAAE,WAAcA,EAAwB,QAAWN,EAAKW,GAAI,SAAYR,GAExE,CAAE,QAAWH,EAAKW,GAAI,SAAYR,GAE5CI,QAAQC,IAAI,mBAAqBI,KAAKC,UAAUJ,KAC5CP,EAdD,wBAeDY,EAAU,eACV1D,EAAS2D,IAAS/G,OAAOU,KAAOwF,EAAS,UAAYtD,OAAOC,MAAMmE,aAhBjE,UAiBgB7D,IAAWM,IAAIL,EAAQqD,GAjBvC,QAiBDlD,EAjBC,sCAmBDuD,EAAU,aACV1D,EAAS2D,IAAS/G,OAAOU,KAAO,UAAYkC,OAAOC,MAAMmE,aApBxD,UAqBgB7D,IAAWG,KAAKF,EAAQqD,GArBxC,QAqBDlD,EArBC,eA0BCA,IACF3D,EAASqH,EAAkB1D,EAAS2D,OACpCtH,EAAS6F,aAAU,IACfY,EACFc,YAAW,WACTvH,EAASwH,EAAQ7D,EAAS2D,KAAMb,MAC/B,KAGHzG,EAASwH,EAAQ7D,EAAS2D,KAAMb,IAE9BJ,GACFA,EAASa,EAAS,CAAEO,WAAY,UAAWC,aAAa,KAtCzD,kDA0CH1H,EAAS6F,aAAU,IA1ChB,0DAAP,uDAkDW2B,EAAU,SAACG,EAAQlB,GAC9B,8CAAO,WAAMzG,GAAN,iBAAAoE,EAAA,sEAICqC,EAEAjD,EADEmE,EACOR,IAAS/G,OAAOqB,KAAO0F,IAAS/G,OAAOa,SAAWkG,IAAS/G,OAAOW,MAAQ,SAAW4G,EAAS,SAAWX,KAAKY,MAAMtD,YAAa,8BAA8BuD,cAAcC,oBAE7KX,IAAS/G,OAAOqB,KAAO0F,IAAS/G,OAAOa,SAAWkG,IAAS/G,OAAOW,MAAQ,UAAYiG,KAAKY,MAAMtD,YAAa,8BAA8BuD,cAAcC,oBAGjKH,IACFnE,EAAS2D,IAAS/G,OAAOU,KAAO6G,EAAS,SAAWX,KAAKY,MAAMtD,YAAa,8BAA8BuD,cAAcC,qBAZzH,SAgBkBvE,IAAWO,IAAIN,GAhBjC,OAgBCG,EAhBD,OAiBH3D,EAASqH,EAAkB1D,EAAS2D,OACpCtH,EAAS,CACPC,KAAM8F,EACN7F,QAASyD,IApBR,gDAwBHgD,QAAQC,IAAI,8BACZ5G,EAAS+H,KAzBN,yDAAP,uDA8BWV,EAAoB,SAACN,GAGhC,IAAIiB,EAAchF,OAAOC,MAAMmE,aAAe,iBAI9C,OAHgB,IAAIa,KACZC,IAAIF,EAAajB,EAAI,CAAEoB,KAAM,IAAKC,OAAQ,MAClDtD,YAAagB,EAAsBiB,GAC5B,SAAA/G,GACLA,EAAS,CACPC,KAAM6F,EACN5F,QAAS6G,MAmDFsB,EAAiB,SAACV,EAAQvB,EAAMI,EAAcH,GACzD,8CAAO,WAAMrG,GAAN,eAAAoE,EAAA,6DACLpE,EAAS6F,aAAU,IADd,SAGCrC,EAAS2D,IAAS/G,OAAOU,KAAO6G,EAAS,IAAMR,IAAS/G,OAAOQ,QAAUwF,EAAKW,GAAK,UAAY/D,OAAOC,MAAMmE,aAH7G,SAIG7D,IAAWQ,OAAOP,GAJrB,OAMHxD,EAAS,CACPC,KAAMgG,EACN/F,QAASkG,IAEXpG,EAAS6F,aAAU,IACfQ,GACFA,EAAS,oBAAqB,CAAEoB,WAAY,QAASC,aAAa,IAZjE,kDAiBHf,QAAQC,IAAI,4BAA8Be,GAC1C3H,EAAS6F,aAAU,IAlBhB,0DAAP,uDAuBWkC,EAAoB,SAACO,GAChC,OAAO,SAAAtI,GAOLA,EAAS,CAAEC,KAAMiG,EAAsBhG,QAASoI,O,2oaC5L9CC,EAAY,CAChBC,SAAU,GACVC,UAAW,GACXC,WAAY,IA0BCC,EAvBQ,WAAgC,IAA/BC,EAA8B,uDAAtBL,EAAW/E,EAAW,uCAEpD,OAAIA,EAAOvD,OAAS4I,IACX,2BACFD,GADL,IAEEJ,SAAUhF,EAAOtD,UAGjBsD,EAAOvD,OAAS6I,IACX,2BACFF,GADL,IAEEH,UAAWjF,EAAOtD,UAGlBsD,EAAOvD,OAAS8I,IACX,2BACFH,GADL,IAEEF,WAAYlF,EAAOtD,UAGhB0I,G,wBCdHL,EAAY,CAChBS,UAAW,GACXrB,OAAQ,GACRsB,UAAW,EACXX,QAAS,IAsEIY,EAlEK,WAAgC,IAA/BN,EAA8B,uDAAtBL,EAAW/E,EAAW,uCAC3CwF,EAAYJ,EAChBO,EAAU3F,EAAOtD,QACnB,GAAIsD,EAAOvD,OAAS6F,IAClB,OAAO,2BACF8C,GADL,IAEEjB,OAAQnE,EAAOtD,UAGnB,GAAIsD,EAAOvD,OAAS8F,IAClB,OAAO,2BACF6C,GADL,IAEEI,UAAWvD,OAAO2D,OAAO,GAAI5F,EAAOtD,SACpC+I,UAAWzF,EAAOtD,QAAQmJ,WAS9B,GAJI7F,EAAOvD,KAAS+F,IAIhBxC,EAAOvD,OAASgG,IAAkB,CACpC,IAAIqD,EAAQN,EAAUA,UAAUR,SAASe,WAAU,SAAAC,GAAK,OAAIA,EAAMzC,KAAOoC,EAAQpC,MAEjF,GADAiC,EAAUA,UAAUR,SAASiB,OAAOH,EAAO,GACC,IAAxCN,EAAUA,UAAUR,SAAS7C,OAAc,CAG7C,IAAIqC,EAAchF,OAAOC,MAAMmE,aAAe,iBACxCsC,EAAU,IAAIzB,IAGpB,OAFAyB,EAAQC,OAAO3B,GACf7C,YAAgBW,KACT,2BACF8C,GADL,IAEEI,UAAW,GACXC,UAAWD,EAAUA,UAAUR,SAAS7C,OACxCgC,OAAQ,KAGV,OAAO,2BACFiB,GADL,IAEEK,UAAWD,EAAUA,UAAUR,SAAS7C,OACxCqD,UAAWA,EAAUA,YAO3B,GAAIxF,EAAOvD,OAASiG,IAAsB,CACxC,IAAI0D,EAAe5G,OAAOC,MAAMmE,aAAe,iBACzCsC,EAAU,IAAIzB,IAGpB,OAFAyB,EAAQC,OAAOC,GACfzE,YAAgByE,GACT,2BACFhB,GADL,IAEEI,UAAW,GACXC,UAAW,EACXtB,OAAQ,GACRW,QAAS9E,EAAOtD,UAIpB,OAAO0I,G,QClFHL,EAAY,CACdsB,SAAU,GACVrD,aAAc,IAoBHsD,EAjBM,WAAgC,IAA/BlB,EAA8B,uDAAtBL,EAAW/E,EAAW,uCAChD,OAAIA,EAAOvD,OAAS8J,IACT,2BACAnB,GADP,IAEIiB,SAAUrG,EAAOtD,UAGrBsD,EAAOvD,OAAS+J,IACT,2BACApB,GADP,IAEIpC,aAAchD,EAAOtD,UAItB0I,G,QCpBLL,EAAY,CACd0B,WAAW,GAcAC,EAXO,WAAgC,IAA/BtB,EAA8B,uDAAtBL,EAAW/E,EAAW,uCACjD,OAAIA,EAAOvD,OAAS2F,IACT,2BACAgD,GADP,IAEIqB,UAAWzG,EAAOtD,UAInB0I,G,QCZLL,EAAY,CACd9B,SAAU,GACV0D,QAAS,GACTC,YAAa,GACbxB,MAAO,GACPyB,UAAW,GACXC,eAAgB,IA4CLC,EAzCK,WAAgC,IAA/B3B,EAA8B,uDAAtBL,EAAW/E,EAAW,uCAC/C,OAAIA,EAAOvD,OAASuK,IACT,2BACA5B,GADP,IAEInC,SAAUjD,EAAOtD,UAGrBsD,EAAOvD,OAASwK,IACT,2BACA7B,GADP,IAEIuB,QAAS3G,EAAOtD,UAGpBsD,EAAOvD,OAASyK,IACT,2BACA9B,GADP,IAEIwB,YAAa5G,EAAOtD,UAGxBsD,EAAOvD,OAAS0K,IACT,2BACA/B,GADP,IAEIA,MAAOpF,EAAOtD,UAGlBsD,EAAOvD,OAAS2K,IACT,2BACAhC,GADP,IAEI0B,eAAgB9G,EAAOtD,UAG3BsD,EAAOvD,OAAS4K,IACT,2BACAjC,GADP,IAEIyB,UAAW7G,EAAOtD,UAInB0I,G,SC/CLL,EAAY,CACduC,UAAW,IAcAC,EAXQ,WAAgC,IAA/BnC,EAA8B,uDAAtBL,EAAW/E,EAAW,uCAClD,OAAIA,EAAOvD,OAASJ,IACT,2BACA+I,GADP,IAEIkC,UAAWtH,EAAOtD,UAInB0I,G,QCQIoC,EAZKC,0BAAgB,CAClCpD,cAAeqD,qCAA2B,CAAEpD,oBAAqB,OAGjEqD,YAAaxC,EACbyC,aAActB,EACduB,SAAUnC,EACVoC,QAASpB,EACTzD,SAAU8D,EACVgB,QAASR,I,gCCTIS,eAPK,SAAAC,GAIlB,OAHAC,qBAAU,WACR1I,OAAO2I,SAAS,EAAG,MAEdF,EAAMG,Y,oDC0BAC,qBAXS,SAAAjD,GACpB,MAAO,CACHqB,UAAWrB,EAAM0C,QAAQrB,cAIN,SAAAjK,GACvB,MAAO,KAII6L,EA5BA,SAAC,GAAmB,IAAjB5B,EAAgB,EAAhBA,UACd,OACI,8BACI,cAAC,IAAD,CACI6B,KAAM,IAENC,MAAO/I,OAAOC,MAAM+I,gBACpBV,QAASrB,S,kBCeV4B,qBAZS,SAAAjD,GACpB,MAAO,CACHd,oBAAqBc,EAAMf,cAAcC,wBAItB,SAAA9H,GACvB,MAAO,KAKI6L,CAA6ChE,yBApB7C,SAAC,GAAiB,IAAfoE,EAAc,EAAdA,QAEd,OACI,cAAC,IAAD,CAAeC,SAAS,SAASC,MAAO,CAAEC,WAAY,WAClDC,WAAYJ,EAAO,OAAYK,YAAa,CAAEF,WAAY,UAAWL,MAAO,OAAQQ,SAAU,OAAQC,QAAS,aADnH,SACmIP,EAAQ,wB,gBCW7IQ,EAAOC,gBAAK,kBAAM,6EAGlBC,EAAWD,gBAAK,kBAAM,8EAGtBE,EAAgBF,gBAAK,kBAAM,6EAI3BG,EAAUH,gBAAK,kBAAM,+DACrBI,GAAYJ,gBAAK,kBAAM,sEACvBK,GAAgBL,gBAAK,kBAAM,sEAC3BM,GAAiBN,gBAAK,kBAAM,sEAC5BO,GAAgBP,gBAAK,kBAAM,sEAE3BQ,GAAOR,gBAAK,kBAAM,+DAClBS,GAAcT,gBAAK,kBAAM,+DACzBU,GAAeV,gBAAK,kBAAM,+DAC1BW,GAAWX,gBAAK,kBAAM,uEAEtBY,GAAWZ,gBAAK,kBAAM,+DACtBa,GAAeb,gBAAK,kBAAM,+DAC1Bc,GAAUd,gBAAK,kBAAM,+DACrBe,GAAgBf,gBAAK,kBAAM,6EAmMlBb,qBAAQ,MARI,SAAA7L,GACzB,MAAO,CACL0N,cAAe,SAAC1I,GACdhF,EAAS0N,YAAc1I,QAKd6G,CAAkChE,yBA/LrC,SAAC4D,EAAOiC,GAGlB,IAAMC,EAAU,uCAAG,WAAOC,GAAP,mBAAAxJ,EAAA,6DACbZ,EAASR,OAAOC,MAAMC,aAAeF,OAAOC,MAAME,gBAAkBgE,IAAS/G,OAAOI,iBAAmBoN,EAAW,UAAY5K,OAAOC,MAAMmE,aAAe,SAAWpE,OAAOC,MAAM4K,qBACtLlH,QAAQC,IAAI,WAAapD,GAFR,kBAKMD,IAAWO,IAAIN,GALrB,OAMf,GADIG,EALW,OAMD,CACVgD,QAAQC,IAAIjD,EAASoD,IACrB,IACM+G,EAAgB9G,KAAKY,MAAM3C,aAAaI,QAAQ,8BACpDsB,QAAQC,IAAI,WAAakH,EAAc3C,YAAYzC,YACnDoF,EAAc3C,YAAYzC,WAAa/E,EAASoD,GAChDJ,QAAQC,IAAI,kBAAoBkH,EAAc3C,YAAYzC,YAC1D/B,QAAQC,IAAI,kBAAoBI,KAAKC,UAAU6G,IAC/C7I,aAAaC,QAAQ,4BAA6B8B,KAAKC,UAAU6G,IACjE,MAAOpJ,GACPiC,QAAQC,IAAI,QAASlC,IAhBZ,gDAwBfiC,QAAQC,IAAI,QAAZ,MAxBe,yDAAH,sDAqDhB,OAtBA8E,qBAAU,WACRD,EAAMzL,SACJ+N,wBAAc,CACZC,UAAW,CACTC,GAAIC,EAAQ,KACZC,GAAID,EAAQ,SAMlBzC,EAAMzL,SAASoO,yBAAepL,OAAOC,MAAM4K,uBAE3C,IAAI7F,EAAchF,OAAOC,MAAMmE,aAAe,iBAE1CiH,GADY,IAAIpG,KACCnE,IAAIkE,GACrBqG,GACF5C,EAAMzL,SAASqH,YAAkBgH,IAEnCC,SAASC,gBAAgBpC,MAAMqC,YAAY,gBAAiBxL,OAAOC,MAAM+I,oBAIzE,cAAC,gBAAD,CAAeyC,UAAU,cAAzB,SACE,cAAC,sBAAD,UACE,eAAC,IAAD,WAEE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,UACE,cAAC,WAAD,CACEC,SACE,qBAAKC,UAAU,0BAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,yBACA,8BALR,SAUE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,OAAK,EACLzG,KAAK,IACL0G,UAAWpC,IAOb,cAAC,IAAD,CACEtE,KAAK,gBACL0G,UAAWlC,IAGZ,cAAC,IAAD,CACCxE,KAAK,kBACL2G,OAAQ,SAAArD,GACN,IAAIsD,EAAU/L,OAAOkJ,SAAS8C,KACxBC,EAAWF,EAAQG,UAAUH,EAAQI,YAAY,KAAO,GAE9D,OADAxB,EAAWsB,GACJ,cAAC,IAAD,CAAUG,GAAI,aAAeH,OAMxC,cAAC,IAAD,CACE9G,KAAK,eACL0G,UAAWjC,IAEb,cAAC,IAAD,CACEzE,KAAK,eACL0G,UAAWrB,KAEb,cAAC,IAAD,CACErF,KAAK,cACL0G,UAAWpB,KAKb,cAAC,IAAD,CACEtF,KAAK,WACL0G,UAAWhC,IAEb,cAAC,IAAD,CACE1E,KAAK,cACL0G,UAAW/B,KAEb,cAAC,IAAD,CACE3E,KAAK,YACL0G,UAAW9B,KAEb,cAAC,IAAD,CACE5E,KAAK,SACL0G,UAAW9B,KAEb,cAAC,IAAD,CACE5E,KAAK,mBACL0G,UAAW7B,KAEb,cAAC,IAAD,CACE7E,KAAK,4BACL0G,UAAW5B,KAGb,cAAC,IAAD,CACE9E,KAAK,QACL0G,UAAW3B,KAEb,cAAC,IAAD,CACE/E,KAAK,gBACL0G,UAAW1B,KAEb,cAAC,IAAD,CACEhF,KAAK,qBACL0G,UAAWzB,KAEb,cAAC,IAAD,CACEjF,KAAK,YACL0G,UAAWxB,KAGb,cAAC,IAAD,CACElF,KAAK,iBACL0G,UAAWtB,KAGb,cAAC,IAAD,CACEpF,KAAM,aACN0G,UAAWvB,KAGb,cAAC,IAAD,CAAOsB,OAAK,EAACC,UAAWvB,uB,OC/MpB+B,QACW,cAA7BrM,OAAOkJ,SAASoD,UAEa,UAA7BtM,OAAOkJ,SAASoD,UAEhBtM,OAAOkJ,SAASoD,SAASC,MACvB,2D,cCDEC,GAAQC,sBACZzE,EACA0E,iBACAC,+BAAoBC,0BAAgBC,IAAOC,oBAM7CC,IAASjB,OACL,cAAC,WAAD,CAAUU,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEJlB,SAAS0B,eAAe,SDmGpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB,odE/HN9F,EAAW,WACXC,EAAc,cACdC,EAAuB,uBACvBC,EAAY,YACZE,EAAiB,iBACjBD,EAAsB,sBACnC2F,IAAQC,UAAUxN,OAAOC,MAAMwN,iBAC/BF,IAAQG,YAAY,MACb,IAAMC,EAAU,SAAC/M,GACpB,8CAAO,WAAM5D,GAAN,SAAAoE,EAAA,sDACHpE,EAAS,CACLC,KAAMuK,EACNtK,QAAS0D,IAHV,2CAAP,uDAqBSgN,EAAqB,SAACC,GAC/B,8CAAO,WAAM7Q,GAAN,iBAAAoE,EAAA,sEAEKZ,EAAS2D,IAAS/G,OAAOwB,iBAAmB,UAAYoB,OAAOC,MAAMmE,aAAe,SAAWyJ,EAFpG,SAGsBtN,IAAWO,IAAIN,GAHrC,OAGKG,EAHL,OAKC3D,EAAS,CACLC,KAAMyK,EACNxK,QAASyD,IAPd,yGAAP,uDAeSmN,EAAW,SAACxJ,GACrB,8CAAO,WAAMtH,GAAN,iBAAAoE,EAAA,sEAEKZ,EAAS2D,IAAS/G,OAAOoB,MAAQ,SAAW8F,EAFjD,SAGsB/D,IAAWO,IAAIN,GAHrC,OAGKG,EAHL,OAIC3D,EAAS,CACLC,KAAM0K,EACNzK,QAASyD,IANd,yGAAP,uDAYSoN,EAAmB,SAACzJ,GAC7B,8CAAO,WAAMtH,GAAN,iBAAAoE,EAAA,sEAEKZ,EAAS2D,IAAS/G,OAAOoB,MAAQ,SAAW8F,EAFjD,SAGsB/D,IAAWO,IAAIN,GAHrC,OAGKG,EAHL,OAIC3D,EAAS,CACLC,KAAM4K,EACN3K,QAASyD,IANd,yGAAP,uDAYSqN,EAAqB,WAC9B,8CAAO,WAAMhR,GAAN,eAAAoE,EAAA,uDACG8H,EAAWlJ,OAAOiN,WAAajN,OAAOiN,UAAUgB,cAGlD/E,EAASgF,oBAAmB,SAACC,GAEzBnR,EAASoR,EAAkBD,EAASE,OAAOC,SAAUH,EAASE,OAAOE,eACtE,SAAC7M,GACAiC,QAAQC,IAAIlC,MARjB,2CAAP,uDAaS0M,EAAoB,SAACI,EAAKC,GACnC,8CAAO,WAAMzR,GAAN,SAAAoE,EAAA,sDACHmM,IAAQmB,WAAWF,EAAKC,GAAMrB,MAC1B,SAAAzM,GAGI3D,EAAS,CACLC,KAAM2K,EACN1K,QAASyD,EAASgO,aAG1B,SAAAjN,GACIiC,QAAQjC,MAAMA,MAXnB,2CAAP,wD,gCC3FJ,0KAAO,IAAMmE,EAAyB,yBACzBC,EAAiB,iBACjBC,EAAkB,kBAalB6I,EAAe,SAACC,GAC3B,OAAO,SAAA7R,GACLA,EAAS,CACPC,KAAM6I,EACN5I,QAAS2R,MAIFnE,EAAgB,SAACoE,GAC5B,OAAO,SAAA9R,GACLA,EAAS,CACPC,KAAM8I,EACN7I,QAAS4R,O,kLCzBF/H,EAAe,eACfC,EAAY,YAEZ+H,EAAc,WACvB,8CAAO,WAAM/R,GAAN,iBAAAoE,EAAA,6DACCZ,EAAS2D,IAAS/G,OAAOC,MAAQ2C,OAAOC,MAAMmE,aAD/C,kBAGsB7D,IAAWO,IAAIN,GAHrC,OAGKG,EAHL,OAMC3D,EAAS,CACLC,KAAM8J,EACN7J,QAASyD,IAEb3D,EAASgS,EAASrO,EAAS2D,OAV5B,yGAAP,uDAgBS0K,EAAW,SAACC,GACrB,8CAAO,WAAMjS,GAAN,SAAAoE,EAAA,sDACHpE,EAAS,CACLC,KAAM+J,EACN9J,QAAS+R,IAHV,2CAAP,yD","file":"static/js/main.335c5400.chunk.js","sourcesContent":["export const SET_CONTENT_ID = \"SET_CONTENT_ID\";\n\nexport const setContent = (isValue) => {\n    return dispatch => {\n        dispatch({\n            type: SET_CONTENT_ID,\n            payload: isValue\n        });\n    };\n};\n","const Constant = {\n    ACTION: {\n        STORE: 'store/',\n        DEFAULT: 'DEFAULT/',\n        CATEGORY: 'category/',\n        FRIENDLYCATEGORY: 'category/name/',\n        CONTENT: 'content/',\n        PAGES: 'pages/',\n        PRODUCT_GROUP: 'products/group/',\n        PRODUCT: 'product/',\n        PRODUCTS: 'products/',\n        CART: 'cart/',\n        CARTS: 'cart',\n        PRICE: 'price/',\n        CUSTOMER: 'customer/',\n        LOGIN: 'login/',\n        CUSTOMERS: 'customers/',\n        MANUFACTURERS: 'manufacturers/',\n        VARIANTS: 'variants/',\n        CONFIG: 'config/',\n        COUNTRY: 'country/',\n        ZONES: 'zones/',\n        AUTH: 'auth/',\n        PROFILE: 'profile',\n        SHIPPING: 'shipping',\n        SHIPPING_COUNTRY: 'shipping/country',\n        TOTAL: 'total/',\n        NEWSLETTER: 'newsletter/',\n        REGISTER: 'register',\n        CHECKOUT: 'checkout',\n        PASSWORD: 'password/',\n        CONTACT: 'contact/',\n        ORDERS: 'orders/',\n        ADDRESS: 'address',\n        RESET: 'reset/',\n        REQUEST: 'request/',\n        SEARCH: 'search/',\n        AUTOCOMPLETE: 'autocomplete/',\n        BOXES: 'boxes/',\n        BANNER_TEXT: 'bannerText/',\n        IMAGES: 'images/',\n        HEADER_MESSAGE: 'headerMessage/',\n        AGREEMENT: 'agreement/',\n        PROMO: 'promo/'\n    }\n}\n\n\nexport default Constant","import axios from 'axios';\nimport { getLocalData } from './helper'\n\nconst BASE_URL = window._env_.APP_BASE_URL + window._env_.APP_API_VERSION;\naxios.defaults.baseURL = BASE_URL\n\nexport default class WebService {\n\n\n    static async post(action, params) {\n        let response = await axios.post(action, params)\n        return response.data\n    }\n    static async put(action, params) {\n        let response = await axios.put(action, params)\n        return response.data\n    }\n    static async get(action) {\n        let response = await axios.get(action)\n        return response.data\n    }\n    static async delete(action) {\n        let response = await axios.delete(action)\n        return response.data\n    }\n    static async patch(action, params) {\n        let response = await axios.patch(action, params)\n        return response.data\n    }\n\n\n}\n\naxios.interceptors.request.use(async (config) => {\n    // Do something before request is sent\n    config.baseURL = BASE_URL;\n    const token = await getLocalData(\"token\");\n    config.headers.common['Authorization'] = token ? 'Bearer ' + token : '';\n    return config;\n}, (error) => {\n    // Do something with request error\n    return Promise.reject(error);\n});\n\n\naxios.interceptors.response.use((response) => {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n\n    return response;\n}, (error) => {\n\n    // // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // // Do something with response error\n\n    const { response } = error;\n    // const originalRequest = config;\n\n    if (response.status === 401 || response.status === 404) {\n\n        return Promise.reject(error);\n    }\n    else {\n        return Promise.reject(error);\n    }\n});\n\n","export function setLocalData(key, value) {\n  try {\n    localStorage.setItem(key, value);\n  } catch (error) {\n    // console.log(\"error\", error)\n  }\n}\n\nexport function removeLocalData(key) {\n  try {\n    localStorage.removeItem(key);\n  } catch (error) {\n    // console.log(\"error\", error)\n  }\n}\nexport function getLocalData(key) {\n  try {\n    let data = localStorage.getItem(key);\n    return data\n  } catch (error) {\n    // console.log(\"error\", error)\n  }\n}\n\nexport function isValidValue(value) {\n  if (typeof (value) === \"undefined\" || value === null || value === \"\") {\n    return false\n  }\n  return true\n}\nexport function isCheckValueAndSetParams(params, value) {\n  if (typeof (value) === \"undefined\" || value === null || value === \"\") {\n    return ''\n  }\n  return params + value\n}\nexport function hasProperty(object, key) {\n  if (Array.isArray(object) || typeof (key) != 'string' || !object) {\n    return false\n  } else {\n    return object.hasOwnProperty(key)\n  }\n}\nexport function isValidObject(items) {\n  if (Object.keys(items).length > 0) {\n    return true\n  } else {\n    return false\n  }\n}\nexport function getValueFromObject(object, key) {\n  if (hasProperty(object, key)) {\n    if (isValidValue(object[key])) {\n      return object[key]\n    }\n  }\n  return ''\n}\n// export function getFormDataObj(obj) {\n//   let formData = new FormData()\n//   for (let i in obj) {\n//     if (obj.hasOwnProperty(i)) {\n//       let element = obj[i];\n//       formData.append(i, element)\n//     }\n//   }\n//   return formData\n// }","// import WebService from '../../util/webService';\n// import constant from '../../util/constant';\nexport const SET_LOADER = \"SET_LOADER\";\n\nexport const setLoader = (isValue) => {\n    return dispatch => {\n        dispatch({\n            type: SET_LOADER,\n            payload: isValue\n        });\n    };\n};\n","import WebService from '../../util/webService';\r\nimport constant from '../../util/constant';\r\n\r\nimport { setLoader } from \"../actions/loaderActions\";\r\nimport { setLocalData, getLocalData } from '../../util/helper';\r\nimport Cookies from 'universal-cookie';\r\nexport const GET_SHOPIZER_CART_ID = \"GET_SHOPIZER_CART_ID\";\r\nexport const GET_CART = \"GET_CART\";\r\nexport const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const DECREASE_QUANTITY = \"DECREASE_QUANTITY\";\r\nexport const INCREASE_QUANTITY = \"INCREASE_QUANTITY\";\r\nexport const DELETE_FROM_CART = \"DELETE_FROM_CART\";\r\nexport const DELETE_ALL_FROM_CART = \"DELETE_ALL_FROM_CART\";\r\n\r\n//add to cart\r\nexport const addToCart = (item, addToast, cartId, quantityCount, defaultStore, userData, selectedProductOptions) => {\r\n  return async dispatch => {\r\n    dispatch(setLoader(true))\r\n    try {\r\n      let action;\r\n      let param;\r\n      let response;\r\n      let message;\r\n      console.log('Item ' + cartId + \" quantity \" + quantityCount);\r\n      if (selectedProductOptions !== undefined) {\r\n        param = { \"attributes\": selectedProductOptions, \"product\": item.id, \"quantity\": quantityCount }\r\n      } else {\r\n        param = { \"product\": item.id, \"quantity\": quantityCount }\r\n      }\r\n      console.log('Cart parameters ' + JSON.stringify(param));\r\n      if (cartId) {\r\n        message = \"Updated Cart\"\r\n        action = constant.ACTION.CART + cartId + '?store=' + window._env_.APP_MERCHANT;\r\n        response = await WebService.put(action, param);\r\n      } else {\r\n        message = \"Added Cart\"\r\n        action = constant.ACTION.CART + '?store=' + window._env_.APP_MERCHANT\r\n        response = await WebService.post(action, param);\r\n      }\r\n\r\n      //refresh cart\r\n      // console.log('Cart response' + JSON.stringify(response));\r\n      if (response) {\r\n        dispatch(setShopizerCartID(response.code))\r\n        dispatch(setLoader(false))\r\n        if (userData) {\r\n          setTimeout(() => {\r\n            dispatch(getCart(response.code, userData));\r\n          }, 2000);\r\n\r\n        } else {\r\n          dispatch(getCart(response.code, userData));\r\n        }\r\n        if (addToast) {\r\n          addToast(message, { appearance: \"success\", autoDismiss: true });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      dispatch(setLoader(false))\r\n    }\r\n\r\n  };\r\n};\r\n\r\n//Get cart\r\n\r\nexport const getCart = (cartID, userData) => {\r\n  return async dispatch => {\r\n    // if (cartID) {\r\n    try {\r\n      let action;\r\n      if (userData) {\r\n        if (cartID) {\r\n          action = constant.ACTION.AUTH + constant.ACTION.CUSTOMER + constant.ACTION.CARTS + '?cart=' + cartID + '&lang=' + JSON.parse(getLocalData('redux_localstorage_simple')).multilanguage.currentLanguageCode;\r\n        } else {\r\n          action = constant.ACTION.AUTH + constant.ACTION.CUSTOMER + constant.ACTION.CARTS + '?&lang=' + JSON.parse(getLocalData('redux_localstorage_simple')).multilanguage.currentLanguageCode;\r\n        }\r\n      } else {\r\n        if (cartID) {\r\n          action = constant.ACTION.CART + cartID + '?lang=' + JSON.parse(getLocalData('redux_localstorage_simple')).multilanguage.currentLanguageCode\r\n        }\r\n      }\r\n\r\n      let response = await WebService.get(action);\r\n      dispatch(setShopizerCartID(response.code))\r\n      dispatch({\r\n        type: GET_CART,\r\n        payload: response\r\n      });\r\n\r\n    } catch (error) {\r\n      console.log('Cart action response ' + error);\r\n      dispatch(deleteAllFromCart())\r\n    }\r\n  }\r\n  // }\r\n}\r\nexport const setShopizerCartID = (id) => {\r\n  //set local data\r\n  // set cart id in cookie\r\n  var cart_cookie = window._env_.APP_MERCHANT + '_shopizer_cart';\r\n  const cookies = new Cookies();\r\n  cookies.set(cart_cookie, id, { path: '/', maxAge: 20000000 });//6 months\r\n  setLocalData(GET_SHOPIZER_CART_ID, id);\r\n  return dispatch => {\r\n    dispatch({\r\n      type: GET_SHOPIZER_CART_ID,\r\n      payload: id\r\n    });\r\n  }\r\n}\r\n\r\nexport const getShopizerCartID = () => {\r\n  //set local data\r\n  // set cart id in cookie\r\n  var cart_cookie = window._env_.APP_MERCHANT + '_shopizer_cart';\r\n  const cookies = new Cookies();\r\n  let cookie = cookies.get(cart_cookie);\r\n  if (cookie) {\r\n    getCart(cookie, null);\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//decrease from cart\r\nexport const decreaseQuantity = (item, addToast) => {\r\n  console.log('decrease ' + JSON.stringify(item));\r\n  return dispatch => {\r\n    // if (addToast) {\r\n    //   addToast(\"Item Decremented From Cart\", {\r\n    //     appearance: \"warning\",\r\n    //     autoDismiss: true\r\n    //   });\r\n    // }\r\n    // dispatch({ type: DECREASE_QUANTITY, payload: item });\r\n\r\n  };\r\n};\r\n\r\nexport const increaseQuantity = (item, addToast) => {\r\n  //console.log('increase ' + JSON.stringify(item));\r\n  return dispatch => {\r\n    // if (addToast) {\r\n    //   addToast(\"Item Decremented From Cart\", {\r\n    //     appearance: \"warning\",\r\n    //     autoDismiss: true\r\n    //   });\r\n    // }\r\n    // dispatch({ type: DECREASE_QUANTITY, payload: item });\r\n\r\n  };\r\n};\r\n\r\n\r\n//delete from cart\r\nexport const deleteFromCart = (cartID, item, defaultStore, addToast) => {\r\n  return async dispatch => {\r\n    dispatch(setLoader(true))\r\n    try {\r\n      let action = constant.ACTION.CART + cartID + '/' + constant.ACTION.PRODUCT + item.id + '?store=' + window._env_.APP_MERCHANT;\r\n      await WebService.delete(action);\r\n\r\n      dispatch({\r\n        type: DELETE_FROM_CART,\r\n        payload: item\r\n      });\r\n      dispatch(setLoader(false))\r\n      if (addToast) {\r\n        addToast(\"Removed From Cart\", { appearance: \"error\", autoDismiss: true });\r\n      }\r\n\r\n      // dispatch(getCart(cartID));\r\n    } catch (error) {\r\n      console.log('Error removing from cart ' + cartID);\r\n      dispatch(setLoader(false))\r\n    }\r\n  };\r\n};\r\n//delete all from cart\r\nexport const deleteAllFromCart = (orderID) => {\r\n  return dispatch => {\r\n    // if (addToast) {\r\n    //   addToast(\"Removed All From Cart\", {\r\n    //     appearance: \"error\",\r\n    //     autoDismiss: true\r\n    //   });\r\n    // }\r\n    dispatch({ type: DELETE_ALL_FROM_CART, payload: orderID });\r\n  };\r\n};\r\n\r\n// get stock of cart item\r\nexport const cartItemStock = (item, color, size) => {\r\n  if (item.stock) {\r\n    return item.stock;\r\n  } else {\r\n    return item.variation\r\n      .filter(single => single.color === color)[0]\r\n      .size.filter(single => single.name === size)[0].stock;\r\n  }\r\n};\r\n","import { FETCH_PRODUCTS_SUCCESS, SET_PRODUCT_ID, SET_CATEGORY_ID } from \"../actions/productActions\";\r\n\r\nconst initState = {\r\n  products: [],\r\n  productid: '',\r\n  categoryid: ''\r\n};\r\n\r\nconst productReducer = (state = initState, action) => {\r\n\r\n  if (action.type === FETCH_PRODUCTS_SUCCESS) {\r\n    return {\r\n      ...state,\r\n      products: action.payload\r\n    };\r\n  }\r\n  if (action.type === SET_PRODUCT_ID) {\r\n    return {\r\n      ...state,\r\n      productid: action.payload\r\n    };\r\n  }\r\n  if (action.type === SET_CATEGORY_ID) {\r\n    return {\r\n      ...state,\r\n      categoryid: action.payload\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default productReducer;\r\n","\r\nimport Cookies from 'universal-cookie';\r\nimport { removeLocalData } from '../../util/helper';\r\n\r\nimport {\r\n\r\n  DECREASE_QUANTITY,\r\n\r\n  DELETE_FROM_CART,\r\n  DELETE_ALL_FROM_CART,\r\n  GET_CART,\r\n  GET_SHOPIZER_CART_ID\r\n} from \"../actions/cartActions\";\r\n\r\nconst initState = {\r\n  cartItems: {},\r\n  cartID: '',\r\n  cartCount: 0,\r\n  orderID: ''\r\n\r\n};\r\n\r\nconst cartReducer = (state = initState, action) => {\r\n  const cartItems = state,\r\n    product = action.payload;\r\n  if (action.type === GET_SHOPIZER_CART_ID) {\r\n    return {\r\n      ...state,\r\n      cartID: action.payload\r\n    };\r\n  }\r\n  if (action.type === GET_CART) {\r\n    return {\r\n      ...state,\r\n      cartItems: Object.assign({}, action.payload),\r\n      cartCount: action.payload.quantity\r\n    }\r\n  }\r\n\r\n\r\n  if (action.type === DECREASE_QUANTITY) {\r\n    //nothing\r\n  }\r\n\r\n  if (action.type === DELETE_FROM_CART) {\r\n    let index = cartItems.cartItems.products.findIndex(order => order.id === product.id);\r\n    cartItems.cartItems.products.splice(index, 1);\r\n    if (cartItems.cartItems.products.length === 0) {\r\n      //remove from local storage\r\n      //remove from cookie\r\n      var cart_cookie = window._env_.APP_MERCHANT + '_shopizer_cart';\r\n      const cookies = new Cookies();\r\n      cookies.remove(cart_cookie);\r\n      removeLocalData(GET_SHOPIZER_CART_ID);\r\n      return {\r\n        ...state,\r\n        cartItems: {},\r\n        cartCount: cartItems.cartItems.products.length,\r\n        cartID: ''\r\n      }\r\n    } else {\r\n      return {\r\n        ...state,\r\n        cartCount: cartItems.cartItems.products.length,\r\n        cartItems: cartItems.cartItems,\r\n      }\r\n    }\r\n\r\n    // return remainingItems(cartItems, product);\r\n  }\r\n\r\n  if (action.type === DELETE_ALL_FROM_CART) {\r\n    var cart_cookie1 = window._env_.APP_MERCHANT + '_shopizer_cart';\r\n    const cookies = new Cookies();\r\n    cookies.remove(cart_cookie1);\r\n    removeLocalData(cart_cookie1);\r\n    return {\r\n      ...state,\r\n      cartItems: {},\r\n      cartCount: 0,\r\n      cartID: '',\r\n      orderID: action.payload,\r\n    }\r\n  }\r\n\r\n  return state;\r\n};\r\n\r\nexport default cartReducer;\r\n","import { SET_MERCHANT } from \"../actions/storeAction\";\nimport { SET_STORE } from \"../actions/storeAction\";\n\nconst initState = {\n    merchant: '',\n    defaultStore: ''\n};\n\nconst storeReducer = (state = initState, action) => {\n    if (action.type === SET_MERCHANT) {\n        return {\n            ...state,\n            merchant: action.payload\n        };\n    }\n    if (action.type === SET_STORE) {\n        return {\n            ...state,\n            defaultStore: action.payload\n        };\n    }\n\n    return state;\n};\n\nexport default storeReducer;\n","import { SET_LOADER } from \"../actions/loaderActions\";\n\nconst initState = {\n    isLoading: false\n};\n\nconst loaderReducer = (state = initState, action) => {\n    if (action.type === SET_LOADER) {\n        return {\n            ...state,\n            isLoading: action.payload\n        };\n    }\n\n    return state;\n};\n\nexport default loaderReducer;\n","import { SET_USER, SET_COUNTRY, SET_SHIPPING_COUNTRY, SET_STATE, GET_CURRENT_ADDRESS, SET_SHIP_STATE } from \"../actions/userAction\";\n\nconst initState = {\n    userData: '',\n    country: [],\n    shipCountry: [],\n    state: [],\n    shipState: [],\n    currentAddress: []\n};\n\nconst userReducer = (state = initState, action) => {\n    if (action.type === SET_USER) {\n        return {\n            ...state,\n            userData: action.payload\n        };\n    }\n    if (action.type === SET_COUNTRY) {\n        return {\n            ...state,\n            country: action.payload\n        };\n    }\n    if (action.type === SET_SHIPPING_COUNTRY) {\n        return {\n            ...state,\n            shipCountry: action.payload\n        };\n    }\n    if (action.type === SET_STATE) {\n        return {\n            ...state,\n            state: action.payload\n        };\n    }\n    if (action.type === GET_CURRENT_ADDRESS) {\n        return {\n            ...state,\n            currentAddress: action.payload\n        };\n    }\n    if (action.type === SET_SHIP_STATE) {\n        return {\n            ...state,\n            shipState: action.payload\n        };\n    }\n\n    return state;\n};\n\nexport default userReducer;\n","import { SET_CONTENT_ID } from \"../actions/contentAction\";\n\nconst initState = {\n    contentId: ''\n};\n\nconst contentReducer = (state = initState, action) => {\n    if (action.type === SET_CONTENT_ID) {\n        return {\n            ...state,\n            contentId: action.payload\n        };\n    }\n\n    return state;\n};\n\nexport default contentReducer;\n","\r\nimport productReducer from \"./productReducer\";\r\nimport cartReducer from \"./cartReducer\";\r\nimport storeReducer from \"./storeReducer\";\r\nimport loaderReducer from \"./loaderReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport contentReducer from \"./contentReducer\";\r\nimport { combineReducers } from \"redux\";\r\nimport { createMultilanguageReducer } from \"redux-multilanguage\";\r\n\r\nconst rootReducer = combineReducers({\r\n  multilanguage: createMultilanguageReducer({ currentLanguageCode: \"en\" }),\r\n  //multilanguage: createMultilanguageReducer({ currentLanguageCode: window._env_.APP_DEFAULT_LANGUAGE }),\r\n  // currencyData: currencyReducer,\r\n  productData: productReducer,\r\n  merchantData: storeReducer,\r\n  cartData: cartReducer,\r\n  loading: loaderReducer,\r\n  userData: userReducer,\r\n  content: contentReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = props => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  });\r\n  return props.children;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","// import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { connect } from \"react-redux\";\n\nconst Loader = ({ isLoading }) => {\n    return (\n        <div>\n            <BounceLoader\n                size={100}\n                // color={\"#fb799c\"}\n                color={window._env_.APP_THEME_COLOR}\n                loading={isLoading}\n            />\n        </div>\n    );\n};\n\n// Loader.propTypes = {\n//     // isLoading: PropTypes.boolean\n// };\n\nconst mapStateToProps = state => {\n    return {\n        isLoading: state.loading.isLoading\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Loader);\n// export default Logo;\n","// import PropTypes from \"prop-types\";\nimport React from \"react\";\nimport CookieConsent from \"react-cookie-consent\";\nimport { connect } from \"react-redux\";\n// import { multilanguage, loadLanguages } from \"redux-multilanguage\";\nimport { multilanguage } from \"redux-multilanguage\";\n\nconst Cookie = ({ strings }) => {\n\n    return (\n        <CookieConsent location=\"bottom\" style={{ background: \"#2B373B\" }}\n            buttonText={strings[\"Accept\"]} buttonStyle={{ background: \"#4e503b\", color: \"#fff\", fontSize: \"14px\", padding: '10px 30px' }}>{strings[\"Cookie Consent\"]}</CookieConsent>\n    );\n};\n\nconst mapStateToProps = state => {\n    return {\n        currentLanguageCode: state.multilanguage.currentLanguageCode,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(Cookie));\n\n","import PropTypes from \"prop-types\";\r\nimport React, { useEffect, Suspense, lazy } from \"react\";\r\nimport ScrollToTop from \"./helpers/scroll-top\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { ToastProvider } from \"react-toast-notifications\";\r\nimport { multilanguage, loadLanguages, changeLanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\nimport { BreadcrumbsProvider } from \"react-breadcrumbs-dynamic\";\r\n\r\nimport Loader from \"./components/loader/loader\"\r\nimport Cookie from \"./components/consent/Cookie\"\r\nimport constant from './util/constant';\r\nimport WebService from './util/webService';\r\nimport Cookies from 'universal-cookie';\r\nimport { Redirect } from 'react-router'\r\n\r\n\r\nimport { setShopizerCartID } from \"./redux/actions/cartActions\";\r\nimport { setCategoryID } from \"./redux/actions/productActions\";\r\n\r\n// var sha512 = require('js-sha512').sha512;\r\n// home pages\r\nconst Home = lazy(() => import(\"./pages/home/Home\"));\r\n\r\n// shop pages\r\nconst Category = lazy(() => import(\"./pages/category/Category\"));\r\n\r\n// product pages\r\nconst ProductDetail = lazy(() => import(\"./pages/product-details/ProductDetail\"));\r\n\r\n// other pages\r\n// const About = lazy(() => import(\"./pages/other/About\"));\r\nconst Contact = lazy(() => import(\"./pages/other/Contact\"));\r\nconst MyAccount = lazy(() => import(\"./pages/other/MyAccount\"));\r\nconst LoginRegister = lazy(() => import(\"./pages/other/LoginRegister\"));\r\nconst ForgotPassword = lazy(() => import(\"./pages/other/ForgotPassword\"));\r\nconst ResetPassword = lazy(() => import(\"./pages/other/ResetPassword\"));\r\n\r\nconst Cart = lazy(() => import(\"./pages/other/Cart\"));\r\nconst RecentOrder = lazy(() => import(\"./pages/other/RecentOrder\"));\r\nconst OrderDetails = lazy(() => import(\"./pages/other/OrderDetails\"));\r\nconst Checkout = lazy(() => import(\"./pages/other/Checkout\"));\r\n\r\nconst NotFound = lazy(() => import(\"./pages/other/NotFound\"));\r\nconst OrderConfirm = lazy(() => import(\"./pages/other/OrderConfirm\"));\r\nconst Content = lazy(() => import(\"./pages/content/Content\"));\r\nconst SearchProduct = lazy(() => import(\"./pages/search-product/SearchProduct\"));\r\n\r\n\r\n//export default function App = (props) => {\r\nconst App = (props, setCategoryID) => {\r\n\r\n\r\n  const resolveUrl = async (friendly) => {\r\n    let action = window._env_.APP_BASE_URL + window._env_.APP_API_VERSION + constant.ACTION.FRIENDLYCATEGORY + friendly + '?store=' + window._env_.APP_MERCHANT + '&lang=' + window._env_.APP_DEFAULT_LANGUAGE;\r\n    console.log('Log url ' + action);\r\n    \r\n    try {\r\n      let response = await WebService.get(action);\r\n      if (response) {\r\n          console.log(response.id);\r\n          try {\r\n            let actualstorage = JSON.parse(localStorage.getItem(\"redux_localstorage_simple\"));\r\n            console.log('Storage ' + actualstorage.productData.categoryid);\r\n            actualstorage.productData.categoryid = response.id;\r\n            console.log('Storage after1 ' + actualstorage.productData.categoryid);\r\n            console.log('Storage after 2' + JSON.stringify(actualstorage));\r\n            localStorage.setItem(\"redux_localstorage_simple\", JSON.stringify(actualstorage));\r\n          } catch (error) {\r\n            console.log(\"error\", error)\r\n          }\r\n\r\n          \r\n      } else {\r\n        //returnfunct = false;\r\n      }\r\n    } catch (error) {\r\n      console.log(\"error\", error)\r\n    }\r\n\r\n }\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    props.dispatch(\r\n      loadLanguages({\r\n        languages: { //from merchant supported languages\r\n          en: require(\"./translations/english.json\"),\r\n          fr: require(\"./translations/french.json\")\r\n        }\r\n      })\r\n    );\r\n\r\n    /** this is a one language only site  */\r\n    props.dispatch(changeLanguage(window._env_.APP_DEFAULT_LANGUAGE));\r\n\r\n    var cart_cookie = window._env_.APP_MERCHANT + '_shopizer_cart';\r\n    const cookies = new Cookies();\r\n    let cookie = cookies.get(cart_cookie);\r\n    if (cookie) {\r\n      props.dispatch(setShopizerCartID(cookie));\r\n    }\r\n    document.documentElement.style.setProperty('--theme-color', window._env_.APP_THEME_COLOR)\r\n  });\r\n\r\n  return (\r\n    <ToastProvider placement=\"bottom-left\">\r\n      <BreadcrumbsProvider>\r\n        <Router>\r\n\r\n          <Loader></Loader>\r\n          <Cookie></Cookie>\r\n          <ScrollToTop>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"flone-preloader-wrapper\">\r\n                  <div className=\"flone-preloader\">\r\n                    <span></span>\r\n                    <span></span>\r\n                  </div>\r\n                </div>\r\n              }\r\n            >\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/\"\r\n                  component={Home}\r\n                />\r\n\r\n                {/* Homepages */}\r\n\r\n\r\n                {/* Shop pages */}\r\n                <Route\r\n                  path=\"/category/:id\"\r\n                  component={Category}\r\n                />\r\n\r\n                 <Route\r\n                  path=\"/categorie/:url\"\r\n                  render={props => {\r\n                    let urlPath = window.location.href;\r\n                    const lastItem = urlPath.substring(urlPath.lastIndexOf('/') + 1)\r\n                    resolveUrl(lastItem);\r\n                    return <Redirect to={'/category/' + lastItem}/>;\r\n                  }}\r\n                 />\r\n\r\n\r\n                {/* Shop product pages */}\r\n                <Route\r\n                  path=\"/product/:id\"\r\n                  component={ProductDetail}\r\n                />\r\n                <Route\r\n                  path=\"/content/:id\"\r\n                  component={Content}\r\n                />\r\n                <Route\r\n                  path=\"/search/:id\"\r\n                  component={SearchProduct}\r\n                />\r\n\r\n                {/* Other pages */}\r\n\r\n                <Route\r\n                  path=\"/contact\"\r\n                  component={Contact}\r\n                />\r\n                <Route\r\n                  path=\"/my-account\"\r\n                  component={MyAccount}\r\n                />\r\n                <Route\r\n                  path=\"/register\"\r\n                  component={LoginRegister}\r\n                />\r\n                <Route\r\n                  path=\"/login\"\r\n                  component={LoginRegister}\r\n                />\r\n                <Route\r\n                  path=\"/forgot-password\"\r\n                  component={ForgotPassword}\r\n                />\r\n                <Route\r\n                  path=\"/customer/:code/reset/:id\"\r\n                  component={ResetPassword}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/cart\"\r\n                  component={Cart}\r\n                />\r\n                <Route\r\n                  path=\"/recent-order\"\r\n                  component={RecentOrder}\r\n                />\r\n                <Route\r\n                  path=\"/order-details/:id\"\r\n                  component={OrderDetails}\r\n                />\r\n                <Route\r\n                  path=\"/checkout\"\r\n                  component={Checkout}\r\n                />\r\n\r\n                <Route\r\n                  path=\"/order-confirm\"\r\n                  component={OrderConfirm}\r\n                />\r\n\r\n                <Route\r\n                  path={\"/not-found\"}\r\n                  component={NotFound}\r\n                />\r\n\r\n                <Route exact component={NotFound} />\r\n              </Switch>\r\n            </Suspense>\r\n          </ScrollToTop>\r\n        </Router>\r\n      </BreadcrumbsProvider>\r\n    </ToastProvider>\r\n  );\r\n};\r\n\r\nApp.propTypes = {\r\n  dispatch: PropTypes.func\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCategoryID: (value) => {\r\n      dispatch(setCategoryID(value));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(multilanguage(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n  // [::1] is the IPv6 localhost address.\r\n  window.location.hostname === \"[::1]\" ||\r\n  // 127.0.0.1/8 is considered localhost for IPv4.\r\n  window.location.hostname.match(\r\n    /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n  )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          // console.log(\r\n          //   \"This web app is being served cache-first by a service \" +\r\n          //     \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          // );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              // console.log(\r\n              //   \"New content is available and will be used when all \" +\r\n              //   \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              // );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              // console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      // console.log(\r\n      //   \"No internet connection found. App is running in offline mode.\"\r\n      // );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"react-app-polyfill/ie11\";\r\nimport \"react-app-polyfill/stable\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { save, load } from \"redux-localstorage-simple\";\r\nimport { Provider } from \"react-redux\";\r\n// import { fetchProducts } from \"./redux/actions/productActions\";\r\nimport rootReducer from \"./redux/reducers/rootReducer\";\r\n// import products from \"./data/products.json\";\r\nimport App from \"./App\";\r\nimport \"./assets/scss/style.scss\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  load(),\r\n  composeWithDevTools(applyMiddleware(thunk, save()))\r\n);\r\n\r\n// fetch products from json file\r\n// store.dispatch(fetchProducts(products));\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import WebService from '../../util/webService';\nimport constant from '../../util/constant';\nimport Geocode from \"react-geocode\";\n// import { changeLanguage } from 'redux-multilanguage';\nexport const SET_USER = \"SET_USER\";\nexport const SET_COUNTRY = \"SET_COUNTRY\";\nexport const SET_SHIPPING_COUNTRY = \"SET_SHIPPING_COUNTRY\";\nexport const SET_STATE = \"SET_STATE\";\nexport const SET_SHIP_STATE = \"SET_SHIP_STATE\";\nexport const GET_CURRENT_ADDRESS = \"GET_CURRENT_ADDRESS\";\nGeocode.setApiKey(window._env_.APP_MAP_API_KEY);\nGeocode.setLanguage(\"en\");\nexport const setUser = (data) => {\n    return async dispatch => {\n        dispatch({\n            type: SET_USER,\n            payload: data\n        });\n    }\n}\nexport const getCountry = () => {\n    return async dispatch => {\n        try {\n            let action = constant.ACTION.COUNTRY;\n            let response = await WebService.get(action);\n            dispatch({\n                type: SET_COUNTRY,\n                payload: response\n            });\n        } catch (error) {\n        }\n    }\n}\n\nexport const getShippingCountry = (lang) => {\n    return async dispatch => {\n        try {\n            let action = constant.ACTION.SHIPPING_COUNTRY + '?store=' + window._env_.APP_MERCHANT + '&lang=' + lang;\n            let response = await WebService.get(action);\n            // console.log('Country ship data ' + response.length);\n            dispatch({\n                type: SET_SHIPPING_COUNTRY,\n                payload: response\n            });\n        } catch (error) {\n        }\n    }\n}\n\n\nexport const getState = (code) => {\n    return async dispatch => {\n        try {\n            let action = constant.ACTION.ZONES + '?code=' + code;\n            let response = await WebService.get(action);\n            dispatch({\n                type: SET_STATE,\n                payload: response\n            });\n        } catch (error) {\n        }\n    }\n}\nexport const getShippingState = (code) => {\n    return async dispatch => {\n        try {\n            let action = constant.ACTION.ZONES + '?code=' + code;\n            let response = await WebService.get(action);\n            dispatch({\n                type: SET_SHIP_STATE,\n                payload: response\n            });\n        } catch (error) {\n        }\n    }\n}\nexport const getCurrentLocation = () => {\n    return async dispatch => {\n        const location = window.navigator && window.navigator.geolocation\n        // console.log(location, 'getCurrentLocation')\n        if (location) {\n            location.getCurrentPosition((position) => {\n                // console.log(position)\n                dispatch(getCurrentAddress(position.coords.latitude, position.coords.longitude))\n            }, (error) => {\n                console.log(error)\n            })\n        }\n    }\n}\nexport const getCurrentAddress = (lat, long) => {\n    return async dispatch => {\n        Geocode.fromLatLng(lat, long).then(\n            response => {\n                // const address = response.results[0].formatted_address;\n                // console.log(response);\n                dispatch({\n                    type: GET_CURRENT_ADDRESS,\n                    payload: response.results\n                });\n            },\n            error => {\n                console.error(error);\n            }\n        );\n    }\n}","export const FETCH_PRODUCTS_SUCCESS = \"FETCH_PRODUCTS_SUCCESS\";\r\nexport const SET_PRODUCT_ID = \"SET_PRODUCT_ID\";\r\nexport const SET_CATEGORY_ID = \"SET_CATEGORY_ID\";\r\n\r\nconst fetchProductsSuccess = products => ({\r\n  type: FETCH_PRODUCTS_SUCCESS,\r\n  payload: products\r\n});\r\n\r\n// fetch products\r\nexport const fetchProducts = products => {\r\n  return dispatch => {\r\n    dispatch(fetchProductsSuccess(products));\r\n  };\r\n};\r\nexport const setProductID = (productID) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_PRODUCT_ID,\r\n      payload: productID\r\n    });\r\n  }\r\n}\r\nexport const setCategoryID = (categoryID) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: SET_CATEGORY_ID,\r\n      payload: categoryID\r\n    });\r\n  }\r\n}\r\n","import WebService from '../../util/webService';\nimport constant from '../../util/constant';\nexport const SET_MERCHANT = \"SET_MERCHANT\";\nexport const SET_STORE = \"SET_STORE\";\n\nexport const setMerchant = () => {\n    return async dispatch => {\n        let action = constant.ACTION.STORE + window._env_.APP_MERCHANT;\n        try {\n            let response = await WebService.get(action);\n            // console.log(response);\n            // if (response) {\n            dispatch({\n                type: SET_MERCHANT,\n                payload: response\n            });\n            dispatch(setStore(response.code));\n        } catch (error) {\n        }\n\n    };\n};\nexport const setStore = (storeCode) => {\n    return async dispatch => {\n        dispatch({\n            type: SET_STORE,\n            payload: storeCode\n        });\n    }\n}"],"sourceRoot":""}