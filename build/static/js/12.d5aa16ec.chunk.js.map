{"version":3,"sources":["components/header/Logo.js","components/header/NavMenu.js","components/header/IconGroup.js","components/header/sub-components/MobileNavMenu.js","components/header/sub-components/MobileLangCurrChange.js","components/header/sub-components/MobileWidgets.js","components/header/MobileMenu.js","components/header/sub-components/LanguageCurrencyChanger.js","components/header/HeaderTop.js","wrappers/header/Header.js","components/footer/FooterCopyright.js","components/footer/sub-components/SubscribeEmail.js","components/footer/FooterNewsletter.js","wrappers/footer/Footer.js","layouts/Layout.js","wrappers/breadcrumb/Breadcrumb.js","components/product/ProductModal.js","components/product/ShopCategories.js","components/product/ShopColor.js","components/product/ShopSize.js","components/product/ShopManufacture.js","wrappers/product/ShopSidebar.js","helpers/product.js","components/product/ShopTopAction.js","wrappers/product/ShopTopbar.js","components/product/ProductGridListSingle.js","wrappers/product/ProductgridList.js","wrappers/product/ShopProducts.js","pages/category/Category.js"],"names":["Logo","imageUrl","logoClass","className","to","alt","src","process","connect","dispatch","setCategoryID","value","setContent","multilanguage","props","strings","menuWhiteClass","sidebarMenu","categories","contents","onClickCategory","item","id","map","index","visible","description","friendlyUrl","onClick","name","children","length","submenu","content","code","state","cartData","cartItems","cartCount","userData","deleteFromCart","cartId","defaultStore","addToast","setUser","data","deleteAllFromCart","getCart","cartID","iconWhiteClass","history","useHistory","useState","setUseDetails","useEffect","getLocalData","window","_env_","APP_BASE_URL","logout","setLocalData","getProfile","a","action","constant","ACTION","AUTH","CUSTOMER","PROFILE","WebService","get","response","push","element","document","onActive","e","Date","onIdle","onAction","debounce","timeout","querySelector","classList","add","j","merchant","merchantData","currentLanguageCode","onChange","languageCode","target","changeLanguage","changeLanguageTrigger","remove","supportedLanguages","i","href","phone","email","MobileMenu","offCanvasNav","offCanvasNavSubMenu","querySelectorAll","anchorLinks","insertAdjacentHTML","menuExpand","numMenuExpand","addEventListener","sideMenuExpand","closeMobileMenu","currentTarget","parentElement","toggle","style","padding","borderStyle","message","setMessage","getContentMessage","CONTENT","BOXES","HEADER_MESSAGE","dangerouslySetInnerHTML","__html","replace","setMerchant","getCurrentLocation","layout","top","headerPaddingClass","headerPositionClass","headerBgClass","scroll","setScroll","headerTop","setHeaderTop","categoryData","setCategoryData","contentData","setContentData","checkServerHealth","header","offsetTop","handleScroll","removeEventListener","status","getCategoryHierarchy","getContent","CATEGORY","PAGES","items","scrollY","logo","path","footerLogo","spaceBottomClass","colorClass","inBusinessSince","getFullYear","rel","subScribeForm","validate","required","pattern","CustomForm","spaceTopClass","subscribeBtnClass","buttonLabel","emailPlaceHolder","sendingPlaceHolder","confirmationPlaceHolder","setStatus","useForm","mode","defaultValues","criteriaMode","register","handleSubmit","errors","reset","onSubmit","NEWSLETTER","param","post","ref","type","placeholder","color","fontSize","SubscribeEmail","FooterNewsletter","spaceLeftClass","sideMenu","widgetColorClass","mailchimpUrl","backgroundColorClass","spaceRightClass","containerClass","extraFooterClass","setTop","address","city","stateProvince","country","postalCode","animateScroll","scrollToTop","Layout","headerContainerClass","Breadcrumb","separator","NavLink","finalItem","setLoader","product","finalproductprice","finaldiscountedprice","setDiscountedPrice","setProductPrice","discounted","setIsDiscount","gallerySwiper","getGallerySwiper","thumbnailSwiper","getThumbnailSwiper","selectedProductColor","setSelectedProductColor","quantityCount","setQuantityCount","images","image","defaultImage","currentImage","setCurrentImage","addToCart","addtocart","addtoast","getDefualtsOption","controller","control","gallerySwiperParams","getSwiper","spaceBetween","loopedSlides","loop","thumbnailSwiperParams","slidesPerView","touchRatio","freeMode","slideToClickedSlide","navigation","nextEl","prevEl","renderPrevButton","renderNextButton","temp","options","optionValues","defaultValue","getPrice","onChangeOptions","option","tempSelectedOptions","findIndex","splice","PRODUCT","PRICE","finalPrice","originalPrice","checkedOrNot","show","onHide","Header","closeButton","single","key","rating","starRatedColor","starDimension","starSpacing","numberOfStars","productSpecifications","weight","width","height","properties","property","propertyValue","display","flexDirection","alignItems","margin","backgroundColor","checked","price","JSON","parse","singleSize","stringify","selected","marginRight","readOnly","quantity","available","canBePurchased","forEach","disabled","ShopCategories","getCategoryParams","string","category","ShopColor","colors","getSortParams","ShopSize","sizes","size","ShopManufacture","manufactures","ShopSidebar","sideSpaceClass","uniqueCategories","uniqueColors","uniqueSizes","uniqueManufacture","setActiveLayout","ShopTopAction","getLayout","productCount","getFilterSortParams","sortedProductCount","offset","pageLimit","ShopTopbar","setProductID","cartItem","sliderClassName","modalShow","setModalShow","useToasts","finalProductPrice","finalDiscountedPrice","onClickProductDetails","title","ProductModal","isValidObject","products","order","ShopProducts","ProductgridList","categoryID","productData","categoryid","isLoading","loading","location","setLayout","categoryValue","setCategoryValue","setOffset","currentPage","setCurrentPage","parseInt","APP_PRODUCT_GRID_LIMIT","setProductData","totalProduct","setTotalProduct","productDetails","setProductDetails","subCategory","setSubCategory","manufacture","setManufacture","setColor","setSize","selectedOption","setSelectedOption","selectedManufature","setSelectedManufature","pathname","getProductList","PRODUCTS","isCheckValueAndSetParams","join","totalPages","recordsTotal","getCategoryDetails","getManufacturers","MANUFACTURERS","sort","getVariants","VARIANTS","variant","reverse","metaDescription","parent","sortType","sortValue","tempSelectedOption","tempSelectedManufature","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","onPageChange","containerClassName","activeClassName"],"mappings":"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","file":"static/js/12.d5aa16ec.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Logo = ({ imageUrl, logoClass }) => {\r\n  return (\r\n    <div className={`${logoClass ? logoClass : \"\"}`}>\r\n      <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n        <img alt=\"\" src={process.env.PUBLIC_URL + imageUrl} />\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nLogo.propTypes = {\r\n  imageUrl: PropTypes.string,\r\n  logoClass: PropTypes.string\r\n};\r\n\r\nexport default Logo;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setCategoryID } from \"../../redux/actions/productActions\";\r\nimport { setContent } from \"../../redux/actions/contentAction\";\r\nconst NavMenu = ({ props, strings, menuWhiteClass, sidebarMenu, categories, contents, setCategoryID, setContent }) => {\r\n\r\n  const onClickCategory = (item) => {\r\n    setCategoryID(item.id)\r\n  }\r\n  const onClickContent = (item) => {\r\n    setContent(item)\r\n  }\r\n  return (\r\n    <div\r\n      className={` ${\r\n        sidebarMenu\r\n          ? \"sidebar-menu\"\r\n          : `main-menu ${menuWhiteClass ? menuWhiteClass : \"\"}`\r\n        } `}\r\n    >\r\n      <nav>\r\n        <ul>\r\n          <li>\r\n            <Link to={\"/\"}>\r\n              {strings[\"Home\"]}\r\n            </Link>\r\n          </li>\r\n          {\r\n            categories.map((item, index) => {\r\n              return (\r\n                item.visible &&\r\n                <li key={index}>\r\n                  <Link to={\"/category/\" + item.description.friendlyUrl} onClick={() => onClickCategory(item)}>{item.description.name}\r\n                    {item.children && item.children.length > 0 ?\r\n                      sidebarMenu ? (\r\n                        <span>\r\n                          <i className=\"fa fa-angle-right\"></i>\r\n                        </span>\r\n                      ) : (\r\n                          <i className=\"fa fa-angle-down\" />\r\n                        )\r\n                      : ''\r\n                    }\r\n\r\n                  </Link>\r\n                  {\r\n                    item.children && item.children.length > 0 &&\r\n                    <ul className=\"submenu\">\r\n                      {\r\n                        item.children.map((submenu, index) => {\r\n                          return (<li key={index}>\r\n                            <Link to={\"/category/\" + submenu.description.friendlyUrl} onClick={() => onClickCategory(submenu)} >\r\n                              {submenu.description.name}\r\n                            </Link>\r\n                          </li>)\r\n                        })\r\n                      }\r\n\r\n                    </ul>\r\n                  }\r\n                </li>\r\n              )\r\n            })\r\n          }\r\n          {\r\n            contents.map((content, index) => {\r\n              return (\r\n                content.visible && content.description &&\r\n                <li key={index}> <Link to={\"/content/\" + content.description.friendlyUrl} onClick={() => onClickContent(content.code)}> {content.description.name}</Link></li>\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nNavMenu.propTypes = {\r\n  menuWhiteClass: PropTypes.string,\r\n  sidebarMenu: PropTypes.bool,\r\n  strings: PropTypes.object\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCategoryID: (value) => {\r\n      dispatch(setCategoryID(value));\r\n    },\r\n    setContent: (value) => {\r\n      dispatch(setContent(value));\r\n    }\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(multilanguage(NavMenu));\r\n// export default multilanguage(NavMenu);\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteFromCart, deleteAllFromCart } from \"../../redux/actions/cartActions\";\r\nimport { setUser } from \"../../redux/actions/userAction\";\r\nimport { getCart } from \"../../redux/actions/cartActions\";\r\nimport { setLocalData, getLocalData } from '../../util/helper';\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport IdleTimer from 'react-idle-timer';\r\nimport constant from '../../util/constant';\r\nimport WebService from '../../util/webService';\r\nconst IconGroup = ({\r\n  // currency,\r\n  cartData,\r\n  cartCount,\r\n  // wishlistData,\r\n  // compareData,\r\n  deleteFromCart,\r\n  iconWhiteClass,\r\n  userData,\r\n  setUser,\r\n  deleteAllFromCart,\r\n  strings,\r\n  getCart\r\n}) => {\r\n  const history = useHistory();\r\n  const timeout = 1000 * 60 * 30;\r\n  // const [idleTimer, setIdleTimer] = useState(null);\r\n  // const [searchData, setSearchData] = useState([]);\r\n  // const [searchText, setSearchText] = useState('');\r\n  const [setUseDetails] = useState({});\r\n  useEffect(() => {\r\n    // getCart(cartData.code, userData)\r\n    if (getLocalData('thekey') === window._env_.APP_BASE_URL) {\r\n      setLocalData('thekey', window._env_.APP_BASE_URL)\r\n    } else {\r\n      logout()\r\n      setLocalData('thekey', window._env_.APP_BASE_URL)\r\n    }\r\n    // let startTime = new Date(getLocalData('session'));\r\n    // let endTime = new Date();\r\n    // var diffMs = (endTime - startTime);\r\n    // var diffMins = Math.round(((diffMs % 86400000) % 3600000) / 60000);\r\n    // if (diffMins > 30) {\r\n    //   logout()\r\n    // }\r\n    if (userData) {\r\n      getProfile()\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps \r\n  }, [])\r\n  const getProfile = async () => {\r\n    let action = constant.ACTION.AUTH + constant.ACTION.CUSTOMER + constant.ACTION.PROFILE;\r\n    try {\r\n      let response = await WebService.get(action);\r\n      if (response) {\r\n        setUseDetails(response)\r\n      }\r\n    }\r\n    catch (error) {\r\n      setUser('')\r\n      setLocalData('token', '')\r\n      history.push('/')\r\n    }\r\n  }\r\n\r\n  //const handleClick = e => {\r\n  //  e.currentTarget.nextSibling.classList.toggle(\"active\");\r\n  //};\r\n\r\n  const triggerMobileMenu = () => {\r\n    const offcanvasMobileMenu = document.querySelector(\r\n      \"#offcanvas-mobile-menu\"\r\n    );\r\n    offcanvasMobileMenu.classList.add(\"active\");\r\n  };\r\n  const logout = () => {\r\n    setUser('')\r\n    setLocalData('token', '')\r\n    deleteAllFromCart()\r\n  }\r\n  const onAction = (e) => {\r\n    setLocalData('session', new Date())\r\n  }\r\n\r\n  const onActive = (e) => {\r\n    setLocalData('session', new Date())\r\n  }\r\n\r\n  const onIdle = (e) => {\r\n    // logout()\r\n  }\r\n\r\n  // const onSearch = async (e) => {\r\n  //   setSearchText(e.target.value)\r\n  //   if (e.target.value.length >= 3) {\r\n\r\n  //     let action = constant.ACTION.SEARCH + constant.ACTION.AUTOCOMPLETE;\r\n  //     let param = { \"query\": e.target.value }\r\n  //     try {\r\n  //       let response = await WebService.post(action, param);\r\n  //       if (response) {\r\n  //         setSearchData(response.values)\r\n  //       }\r\n  //     } catch (error) {\r\n  //       console.log(error, '------------')\r\n  //     }\r\n  //   }\r\n  // }\r\n  // const onSelectedSearch = (data) => {\r\n  //   setSearchText(data)\r\n  //   setSearchData([])\r\n  // }\r\n  // const keyDownFunction = (e) => {\r\n  //   if (e.keyCode === 13) {\r\n  //     onSearchClick()\r\n  //   }\r\n  // }\r\n  // const onSearchClick = () => {\r\n  //   history.push('/search/' + searchText)\r\n  // }\r\n  return (\r\n    <div\r\n      className={`header-right-wrap ${iconWhiteClass ? iconWhiteClass : \"\"}`}\r\n    >\r\n      <IdleTimer\r\n        element={document}\r\n        onActive={onActive}\r\n        onIdle={onIdle}\r\n        onAction={onAction}\r\n        debounce={250}\r\n        timeout={timeout} />\r\n\r\n      {/*  search as configurable component */}\r\n      {/*\r\n      <div className=\"same-style header-search\">\r\n        < button className=\"search-active\" onClick={e => handleClick(e)}>\r\n          <i className=\"pe-7s-search\" />\r\n        </button>\r\n        <div className=\"search-content\">\r\n          <form >\r\n            <input type=\"text\" placeholder={strings[\"Search\"]} value={searchText} onKeyDown={(e) => keyDownFunction(e)} onChange={e => onSearch(e)} />\r\n            <button className=\"button-search\" onClick={onSearchClick}>\r\n              <i className=\"pe-7s-search\" />\r\n            </button>\r\n          </form>\r\n          {\r\n            searchData.length > 0 &&\r\n            <div className=\"autoComplete\" >\r\n              <div className=\"shopping-cart-content\">\r\n                <ul>\r\n                  {\r\n                    searchData.map((value, index) => {\r\n                      return (\r\n                        <li className=\"single-shopping-cart\" key={index} >\r\n                          <p onClick={() => onSelectedSearch(value)}>{value}</p>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          }\r\n        </div>\r\n      </div>\r\n      */}\r\n      {/*\r\n      <div className=\"same-style account-setting d-none d-lg-block\">\r\n        {\r\n          pathname.url !== '/checkout' &&\r\n          <button\r\n            className=\"account-setting-active\"\r\n            onClick={e => handleClick(e)}\r\n          >\r\n            <i className=\"pe-7s-user-female\" />\r\n          </button>\r\n        }\r\n      */}\r\n      {/*\r\n        <div className=\"account-dropdown\">\r\n          <ul>\r\n            {\r\n              !userData &&\r\n              <div>\r\n                <li>\r\n                  <Link to={\"/login\"}>{strings[\"Login\"]}</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={\"/register\"}>{strings[\"Register\"]}</Link>\r\n                </li>\r\n              </div>\r\n            }\r\n            {\r\n              userData &&\r\n              <div className=\"user-profile\">\r\n                <div className=\"user-name\">\r\n                  Welcome {useDetails.firstName} {useDetails.lastName}\r\n                </div>\r\n                <span className=\"user-email\">{useDetails.emailAddress}</span>\r\n\r\n              </div>\r\n            }\r\n            {\r\n              userData &&\r\n              <li className=\"border-line\"></li>\r\n            }\r\n            {\r\n              userData &&\r\n              <div style={{ marginTop: 12 }}>\r\n                <li>\r\n                  <Link to={\"/my-account\"}>{strings[\"My Account\"]}</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={\"/recent-order\"}>{strings[\"Recent Orders\"]}</Link>\r\n                </li>\r\n                <li>\r\n                  <Link to={\"/login\"} onClick={logout}>{strings[\"Logout\"]}</Link>\r\n                </li>\r\n              </div>\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n          */}\r\n      {/* <div className=\"same-style header-compare\">\r\n        <Link to={process.env.PUBLIC_URL + \"/compare\"}>\r\n          <i className=\"pe-7s-shuffle\" />\r\n          <span className=\"count-style\">\r\n            {compareData && compareData.length ? compareData.length : 0}\r\n          </span>\r\n        </Link>\r\n      </div> */}\r\n      {/* <div className=\"same-style header-wishlist\">\r\n        <Link to={process.env.PUBLIC_URL + \"/wishlist\"}>\r\n          <i className=\"pe-7s-like\" />\r\n          <span className=\"count-style\">\r\n            {wishlistData && wishlistData.length ? wishlistData.length : 0}\r\n          </span>\r\n        </Link>\r\n      </div> */}\r\n      {/*\r\n        pathname.url !== '/checkout' &&\r\n        <div className=\"same-style cart-wrap d-none d-lg-block\">\r\n          <button className=\"icon-cart\" onClick={e => handleClick(e)}>\r\n            <i className=\"pe-7s-shopbag\" />\r\n            <span className=\"count-style\">\r\n              {cartCount}\r\n            </span>\r\n          </button>\r\n          <MenuCart\r\n            cartData={cartData}\r\n            // currency={currency}\r\n            deleteFromCart={deleteFromCart}\r\n          />\r\n        </div>\r\n      */}\r\n      {/*\r\n      <div className=\"same-style cart-wrap d-block d-lg-none\">\r\n        <Link className=\"icon-cart\" to={process.env.PUBLIC_URL + \"/cart\"}>\r\n          <i className=\"pe-7s-shopbag\" />\r\n          <span className=\"count-style\">\r\n            {cartCount}\r\n          </span>\r\n        </Link>\r\n      </div>\r\n      */}\r\n      <div className=\"same-style mobile-off-canvas d-block d-lg-none\">\r\n        <button\r\n          className=\"mobile-aside-button\"\r\n          onClick={() => triggerMobileMenu()}\r\n        >\r\n          <i className=\"pe-7s-menu\" />\r\n        </button>\r\n      </div>\r\n    </div >\r\n  );\r\n};\r\n\r\nIconGroup.propTypes = {\r\n  cartData: PropTypes.object,\r\n  iconWhiteClass: PropTypes.string,\r\n  deleteFromCart: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartData: state.cartData.cartItems,\r\n    cartCount: state.cartData.cartCount,\r\n    userData: state.userData.userData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    deleteFromCart: (cartId, item, defaultStore, addToast) => {\r\n      dispatch(deleteFromCart(cartId, item, defaultStore, addToast));\r\n    },\r\n    setUser: (data) => {\r\n      dispatch(setUser(data));\r\n    },\r\n    deleteAllFromCart: () => {\r\n      dispatch(deleteAllFromCart())\r\n    },\r\n    getCart: (cartID, userData) => {\r\n      dispatch(getCart(cartID, userData));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(IconGroup));\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCategoryID } from \"../../../redux/actions/productActions\";\r\nimport { setContent } from \"../../../redux/actions/contentAction\";\r\nconst MobileNavMenu = ({ strings, categories, contents, setCategoryID, setContent }) => {\r\n  const onClickCategory = (item) => {\r\n    setCategoryID(item.id)\r\n  }\r\n  const onClickContent = (item) => {\r\n    setContent(item)\r\n  }\r\n  // console.log(contents);\r\n  return (\r\n    <nav className=\"offcanvas-navigation\" id=\"offcanvas-navigation\">\r\n      <ul>\r\n        <li className=\"menu-item\">\r\n          <Link to={\"/\"}>Home</Link>\r\n        </li>\r\n\r\n        {\r\n          categories.map((item, index) => {\r\n\r\n            return item.visible && <li className=\"menu-item-has-children\" key={index}>\r\n              <Link to={\"/category/\" + item.description.friendlyUrl} onClick={() => onClickCategory(item)}>\r\n                {item.description.name}\r\n              </Link>\r\n              {\r\n                item.children && item.children.length > 0 &&\r\n                <ul className=\"sub-menu\">\r\n                  {\r\n                    item.children.map((submenu, j) => {\r\n                      return (\r\n                        <li className=\"menu-item-has-children\" key={j}>\r\n                          <Link to={\"/category/\" + submenu.description.friendlyUrl} onClick={() => onClickCategory(submenu)}>\r\n                            {strings[submenu.description.name] ? strings[submenu.description.name] : submenu.description.name}\r\n                          </Link>\r\n                        </li>\r\n                      )\r\n                    })\r\n                  }\r\n                </ul>\r\n              }\r\n            </li>\r\n\r\n          })\r\n        }\r\n        {\r\n          contents.map((content, index) => {\r\n            return (\r\n              content.visible && content.description &&\r\n              <li key={index}> <Link to={\"/content/\" + content.description.friendlyUrl} onClick={() => onClickContent(content.code)}>{content.description.name}</Link></li>\r\n            )\r\n          })\r\n        }\r\n\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nMobileNavMenu.propTypes = {\r\n  strings: PropTypes.object\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCategoryID: (value) => {\r\n      dispatch(setCategoryID(value));\r\n    },\r\n    setContent: (value) => {\r\n      dispatch(setContent(value));\r\n    }\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(multilanguage(MobileNavMenu));\r\n// export default multilanguage(MobileNavMenu);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { multilanguage, changeLanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\n// import { setCurrency } from \"../../../redux/actions/currencyActions\";\r\n\r\nconst MobileLangCurrChange = ({\r\n  // currency,\r\n  // setCurrency,\r\n  strings,\r\n  currentLanguageCode,\r\n  dispatch,\r\n  merchant\r\n}) => {\r\n  const changeLanguageTrigger = e => {\r\n    const languageCode = e.target.value;\r\n    dispatch(changeLanguage(languageCode));\r\n  };\r\n\r\n\r\n  const closeMobileMenu = () => {\r\n    const offcanvasMobileMenu = document.querySelector(\r\n      \"#offcanvas-mobile-menu\"\r\n    );\r\n    offcanvasMobileMenu.classList.remove(\"active\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"mobile-menu-middle\">\r\n      <div className=\"lang-curr-style\">\r\n        <span className=\"title mb-2\">Choose Language </span>\r\n        <select\r\n          value={currentLanguageCode}\r\n          onChange={e => {\r\n            changeLanguageTrigger(e);\r\n            closeMobileMenu();\r\n          }}\r\n        >\r\n          {merchant &&\r\n            merchant.supportedLanguages.map((value, i) => {\r\n              return (\r\n                <option value={value.code} key={i}>{strings[value.code]}</option>\r\n              )\r\n            })\r\n          }\r\n\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMobileLangCurrChange.propTypes = {\r\n  strings: PropTypes.object,\r\n  currentLanguageCode: PropTypes.string,\r\n  dispatch: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    merchant: state.merchantData.merchant\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    // setCurrency: currencyName => {\r\n    //   dispatch(setCurrency(currencyName));\r\n    // }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(multilanguage(MobileLangCurrChange));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nconst MobileWidgets = ({ merchant }) => {\r\n  return (\r\n    <div className=\"offcanvas-widget-area\">\r\n      <div className=\"off-canvas-contact-widget\">\r\n        <div className=\"header-contact-info\">\r\n          <ul className=\"header-contact-info__list\">\r\n            <li>\r\n              <i className=\"fa fa-phone\"></i>{\" \"}\r\n              <a href=\"tel://12452456012\">{merchant.phone}</a>\r\n            </li>\r\n            <li>\r\n              <i className=\"fa fa-envelope\"></i>{\" \"}\r\n              <a href=\"mailto:info@yourdomain.com\">{merchant.email}</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = state => {\r\n  return {\r\n    merchant: state.merchantData.merchant\r\n  };\r\n};\r\n\r\n\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  null\r\n)(MobileWidgets);\r\n// export default MobileWidgets;\r\n","import React, { useEffect } from \"react\";\r\n// import MobileMenuSearch from \"./sub-components/MobileSearch\";\r\nimport MobileNavMenu from \"./sub-components/MobileNavMenu\";\r\nimport MobileLangCurChange from \"./sub-components/MobileLangCurrChange\";\r\nimport MobileWidgets from \"./sub-components/MobileWidgets\";\r\n\r\nconst MobileMenu = ({ categories, contents }) => {\r\n  useEffect(() => {\r\n    const offCanvasNav = document.querySelector(\"#offcanvas-navigation\");\r\n    const offCanvasNavSubMenu = offCanvasNav.querySelectorAll(\".sub-menu\");\r\n    const anchorLinks = offCanvasNav.querySelectorAll(\"a\");\r\n\r\n    for (let i = 0; i < offCanvasNavSubMenu.length; i++) {\r\n      offCanvasNavSubMenu[i].insertAdjacentHTML(\r\n        \"beforebegin\",\r\n        \"<span class='menu-expand'><i></i></span>\"\r\n      );\r\n    }\r\n\r\n    const menuExpand = offCanvasNav.querySelectorAll(\".menu-expand\");\r\n    const numMenuExpand = menuExpand.length;\r\n\r\n    for (let i = 0; i < numMenuExpand; i++) {\r\n      menuExpand[i].addEventListener(\"click\", e => {\r\n        sideMenuExpand(e);\r\n      });\r\n    }\r\n\r\n    for (let i = 0; i < anchorLinks.length; i++) {\r\n      anchorLinks[i].addEventListener(\"click\", () => {\r\n        closeMobileMenu();\r\n      });\r\n    }\r\n  });\r\n\r\n  const sideMenuExpand = e => {\r\n    e.currentTarget.parentElement.classList.toggle(\"active\");\r\n  };\r\n\r\n  const closeMobileMenu = () => {\r\n    const offcanvasMobileMenu = document.querySelector(\r\n      \"#offcanvas-mobile-menu\"\r\n    );\r\n    offcanvasMobileMenu.classList.remove(\"active\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"offcanvas-mobile-menu\" id=\"offcanvas-mobile-menu\">\r\n      <button\r\n        className=\"offcanvas-menu-close\"\r\n        id=\"mobile-menu-close-trigger\"\r\n        onClick={() => closeMobileMenu()}\r\n      >\r\n        <i className=\"pe-7s-close\"></i>\r\n      </button>\r\n      <div className=\"offcanvas-wrapper\">\r\n        <div className=\"offcanvas-inner-content\">\r\n          {/* mobile search */}\r\n          {/* <MobileMenuSearch /> */}\r\n\r\n          {/* mobile nav menu */}\r\n          <MobileNavMenu categories={categories} contents={contents} />\r\n\r\n          {/* mobile language and currency */}\r\n          <MobileLangCurChange />\r\n\r\n          {/* mobile widgets */}\r\n          <MobileWidgets />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileMenu;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n//import { changeLanguage } from \"redux-multilanguage\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\nconst LanguageCurrencyChanger = ({\r\n  // currency,\r\n  // setCurrency,\r\n  strings,\r\n  merchant,\r\n  currentLanguageCode,\r\n  dispatch\r\n}) => {\r\n  /**\r\n  const changeLanguageTrigger = e => {\r\n    const languageCode = e.target.value;\r\n    window.location.reload(false)\r\n    dispatch(changeLanguage(languageCode));\r\n  };\r\n  **/\r\n\r\n  // const setCurrencyTrigger = e => {\r\n  //   const currencyName = e.target.value;\r\n  //   setCurrency(currencyName);\r\n  // };\r\n\r\n  \r\n    /* to be uncommented when \r\n    /* <div className=\"language-currency-wrap\">\r\n      <div className=\"same-language-currency language-style\">\r\n        <span>\r\n          {currentLanguageCode === \"en\"\r\n            ? strings[\"en\"]\r\n            : currentLanguageCode === \"fr\"\r\n              ? strings[\"fr\"]\r\n\r\n              : \"\"}{\" \"}\r\n          <i className=\"fa fa-angle-down\" />\r\n        </span>\r\n        <div className=\"lang-car-dropdown\">\r\n          <ul>\r\n            {merchant &&\r\n              merchant.supportedLanguages.map((value, i) => {\r\n                return (\r\n                  <li key={i}>\r\n                    <button value={value.code} onClick={e => changeLanguageTrigger(e)}>\r\n                      {strings[value.code]}\r\n                    </button>\r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n\r\n          </ul>\r\n        </div>\r\n          </div>*/\r\nreturn (\r\n    <div className=\"language-currency-wrap\">\r\n      <div className=\"same-language-currency\" style = {{ padding : 15 }}>\r\n        <p>{strings['Call Us']} : <a href=\"tel:{merchant.phone}\">{merchant.phone}</a></p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nLanguageCurrencyChanger.propTypes = {\r\n  // setCurrency: PropTypes.func,\r\n  // currency: PropTypes.object,\r\n  currentLanguageCode: PropTypes.string,\r\n  dispatch: PropTypes.func,\r\n  strings: PropTypes.object\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    merchant: state.merchantData.merchant\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(multilanguage(LanguageCurrencyChanger));\r\n\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\nimport WebService from '../../util/webService';\r\nimport constant from '../../util/constant';\r\n// import { setCurrency } from \"../../redux/actions/currencyActions\";\r\nimport LanguageCurrencyChanger from \"./sub-components/LanguageCurrencyChanger\";\r\n\r\nconst HeaderTop = ({\r\n  strings,\r\n  currentLanguageCode,\r\n  dispatch,\r\n  borderStyle\r\n}) => {\r\n  const [message, setMessage] = useState('')\r\n  useEffect(() => {\r\n    getContentMessage();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  /**Home page hero content */\r\n  const getContentMessage = async () => {\r\n    let action = constant.ACTION.CONTENT + constant.ACTION.BOXES + constant.ACTION.HEADER_MESSAGE + '?lang=' + currentLanguageCode;\r\n    try {\r\n      let response = await WebService.get(action);\r\n      if (response) {\r\n        //console.log('Response -> ' + JSON.stringify(response));\r\n        setMessage(response.description.description);\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n  return (\r\n    <div\r\n      className={`header-top-wap ${\r\n        borderStyle === \"fluid-border\" ? \"border-bottom\" : \"\"\r\n        }`}\r\n    >\r\n      <LanguageCurrencyChanger\r\n        currentLanguageCode={currentLanguageCode}\r\n        dispatch={dispatch}\r\n      />\r\n      <div className=\"header-offer\">\r\n        <p dangerouslySetInnerHTML={{ __html: message.replace(\"]]>\", \"\") }}>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHeaderTop.propTypes = {\r\n  borderStyle: PropTypes.string,\r\n  currentLanguageCode: PropTypes.string,\r\n  dispatch: PropTypes.func,\r\n  strings: PropTypes.object\r\n};\r\n\r\n// const mapStateToProps = state => {\r\n//   return {\r\n//     // currency: state.currencyData\r\n//   };\r\n// };\r\n\r\n// const mapDispatchToProps = dispatch => {\r\n//   return {\r\n//     // setCurrency: currencyName => {\r\n//     //   dispatch(setCurrency(currencyName));\r\n//     // }\r\n//   };\r\n// };\r\n\r\nexport default connect()(multilanguage(HeaderTop));\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\nimport Logo from \"../../components/header/Logo\";\r\nimport NavMenu from \"../../components/header/NavMenu\";\r\nimport IconGroup from \"../../components/header/IconGroup\";\r\nimport MobileMenu from \"../../components/header/MobileMenu\";\r\nimport HeaderTop from \"../../components/header/HeaderTop\";\r\nimport WebService from '../../util/webService';\r\nimport constant from '../../util/constant';\r\n// import { setLocalData } from '../../util/helper';\r\nimport { setMerchant } from \"../../redux/actions/storeAction\";\r\nimport { getCurrentLocation } from \"../../redux/actions/userAction\";\r\nconst Header = ({\r\n  setMerchant,\r\n  merchant,\r\n  layout,\r\n  top,\r\n  borderStyle,\r\n  headerPaddingClass,\r\n  headerPositionClass,\r\n  headerBgClass,\r\n  defaultStore,\r\n  getCurrentLocation,\r\n  currentLanguageCode\r\n}) => {\r\n  const history = useHistory();\r\n  const [scroll, setScroll] = useState(0);\r\n  const [headerTop, setHeaderTop] = useState(0);\r\n  const [categoryData, setCategoryData] = useState([]);\r\n  const [contentData, setContentData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    checkServerHealth();\r\n\r\n    const header = document.querySelector(\".sticky-bar\");\r\n    setHeaderTop(header.offsetTop);\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const checkServerHealth = async () => {\r\n\r\n    // let action = 'actuator/health/ping';\r\n    try {\r\n      // console.log(\"*********************************\");\r\n      // console.log(\"BASE URL \" + window._env_.APP_BASE_URL);\r\n      // console.log(\"APP_API_VERSION \" + window._env_.APP_API_VERSION);\r\n      // console.log(\"APP_MERCHANT \" + window._env_.APP_MERCHANT);\r\n      // console.log(\"*********************************\");\r\n      let response = await WebService.get(window._env_.APP_BASE_URL + '/actuator/health/ping');\r\n\r\n      if (response) {\r\n        // console.log(response)\r\n        if (response.status === 'UP') {\r\n          setMerchant()\r\n          getCurrentLocation();\r\n          getCategoryHierarchy();\r\n          getContent();\r\n        } else {\r\n          history.push('/not-found')\r\n        }\r\n      }\r\n    } catch (error) {\r\n      history.push('/not-found')\r\n    }\r\n\r\n\r\n  }\r\n  const getCategoryHierarchy = async () => {\r\n    let action = constant.ACTION.CATEGORY + '?count=60&page=0&store=' + defaultStore + '&lang=' + currentLanguageCode;\r\n    try {\r\n      let response = await WebService.get(action);\r\n      if (response) {\r\n        //map of key - id -> state\r\n        setCategoryData(response.categories);\r\n      }\r\n    } catch (error) {\r\n      // console.log(error.messages)\r\n      // console.log(error)\r\n      // history.push('/not-found')\r\n    }\r\n\r\n\r\n  }\r\n  const getContent = async () => {\r\n    //TODO PAGE + COUNT\r\n    let action = constant.ACTION.CONTENT + constant.ACTION.PAGES + '?page=0&count=20&store=' + defaultStore + '&lang=' + currentLanguageCode;\r\n    try {\r\n      let response = await WebService.get(action);\r\n      if (response) {\r\n        setContentData(response.items)\r\n      }\r\n    } catch (error) {\r\n    }\r\n  }\r\n  const handleScroll = () => {\r\n    setScroll(window.scrollY);\r\n  };\r\n\r\n  return (\r\n    <header\r\n      className={`header-area clearfix ${headerBgClass ? headerBgClass : \"\"} ${headerPositionClass ? headerPositionClass : \"\"}`}>\r\n      <div\r\n        className={`${headerPaddingClass ? headerPaddingClass : \"\"} ${\r\n          top === \"visible\" ? \"d-none d-lg-block\" : \"d-none\"} header-top-area ${\r\n          borderStyle === \"fluid-border\" ? \"border-none\" : \"\"}`}>\r\n        <div className={layout === \"container-fluid\" ? layout : \"container\"}>\r\n          {/* header top */}\r\n          <HeaderTop borderStyle={borderStyle} />\r\n        </div>\r\n      </div>\r\n\r\n      <div\r\n        className={`${\r\n          headerPaddingClass ? headerPaddingClass : \"\"\r\n          } sticky-bar header-res-padding clearfix ${\r\n          scroll > headerTop ? \"stick\" : \"\"\r\n          }`}\r\n      >\r\n        <div className={layout === \"container-fluid\" ? layout : \"container\"}>\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-2 col-lg-2 col-md-4 col-4\">\r\n              {/* header logo */}\r\n              {\r\n                merchant.logo != null && <Logo imageUrl={merchant.logo.path} logoClass=\"logo\" />\r\n              }\r\n\r\n            </div>\r\n            <div className=\"col-xl-8 col-lg-8 d-none d-lg-block\">\r\n              {/* Nav menu */}\r\n              <NavMenu categories={categoryData} contents={contentData} />\r\n            </div>\r\n            <div className=\"col-xl-2 col-lg-2 col-md-8 col-8\">\r\n              {/* Icon group */}\r\n              <IconGroup />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* mobile menu */}\r\n        <MobileMenu categories={categoryData} contents={contentData} />\r\n        </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  // merchant: PropTypes.string,\r\n  borderStyle: PropTypes.string,\r\n  headerPaddingClass: PropTypes.string,\r\n  headerPositionClass: PropTypes.string,\r\n  layout: PropTypes.string,\r\n  top: PropTypes.string,\r\n  setMerchant: PropTypes.func\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    merchant: state.merchantData.merchant,\r\n    currentLanguageCode: state.multilanguage.currentLanguageCode,\r\n    defaultStore: state.merchantData.defaultStore\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setMerchant: () => {\r\n      dispatch(setMerchant());\r\n    },\r\n    getCurrentLocation: () => {\r\n      dispatch(getCurrentLocation())\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(multilanguage(Header));\r\n\r\n// export default HeaderOne;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\nconst FooterCopyright = ({ footerLogo, spaceBottomClass, colorClass, merchant }) => {\r\n\r\n  return (\r\n    <div\r\n      className={`copyright ${spaceBottomClass ? spaceBottomClass : \"\"} ${\r\n        colorClass ? colorClass : \"\"\r\n        }`}\r\n    >\r\n      <div className=\"footer-logo\">\r\n        {\r\n          merchant.logo != null &&\r\n          <Link to={process.env.PUBLIC_URL + \"/\"}>\r\n            <img alt=\"\" src={merchant.logo.path} />\r\n          </Link>\r\n        }\r\n\r\n      </div>\r\n      <p>\r\n        © {new Date(merchant.inBusinessSince).getFullYear()}{\" \"}\r\n        <Link to=\"\" rel=\"noopener noreferrer\">\r\n          {merchant.name}\r\n        </Link>\r\n        .<br /> Tous droits réservés\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooterCopyright.propTypes = {\r\n  footerLogo: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  colorClass: PropTypes.string\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    merchant: state.merchantData.merchant\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(multilanguage(FooterCopyright));\r\n// export default FooterCopyright;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState } from \"react\";\r\n// import MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\n\r\nimport { useForm } from \"react-hook-form\";\r\nimport WebService from '../../../util/webService';\r\nimport constant from '../../../util/constant';\r\n\r\nconst subScribeForm = {\r\n  email: {\r\n    name: \"email\",\r\n    validate: {\r\n      required: {\r\n        value: true,\r\n        message: \"Email is required\"\r\n      },\r\n      pattern: {\r\n        value: /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i,\r\n        message: 'Please entered the valid email id'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nconst CustomForm = ({\r\n  // status,\r\n  // message,\r\n  // onValidated,\r\n  spaceTopClass,\r\n  subscribeBtnClass,\r\n  buttonLabel,\r\n  emailPlaceHolder,\r\n  sendingPlaceHolder,\r\n  confirmationPlaceHolder,\r\n  strings\r\n}) => {\r\n  const [status, setStatus] = useState('');\r\n  const { register, handleSubmit, errors, reset } = useForm({\r\n    mode: \"onChange\",\r\n    defaultValues: { email: \"\" },\r\n    criteriaMode: \"all\"\r\n  });\r\n  const onSubmit = async (data) => {\r\n    setStatus('sending')\r\n    try {\r\n      let action = constant.ACTION.NEWSLETTER;\r\n      let param = { \"email\": data.email }\r\n      await WebService.post(action, param);\r\n      // console.log(response)\r\n      // if (response) {\r\n      reset({ email: '' })\r\n      setStatus('success')\r\n\r\n      // setStatus('error')\r\n    } catch (error) {\r\n      setStatus('error')\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"subscribe-form\">\r\n      <form onSubmit={handleSubmit(onSubmit)} >\r\n        <div className=\"mc-form\">\r\n          <div>\r\n            <input\r\n              className=\"email\"\r\n              name={subScribeForm.email.name}\r\n              ref={register(subScribeForm.email.validate)}\r\n              type=\"email\"\r\n              placeholder={strings[\"Your Email Address\"]}\r\n            />\r\n            {errors[subScribeForm.email.name] && <p className=\"error-msg\">{errors[subScribeForm.email.name].message}</p>}\r\n          </div>\r\n          <div className=\"clear\">\r\n            <button className=\"button\" >\r\n              {strings[\"Subscribe\"]}\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      {\r\n        status === \"sending\" && (\r\n          <div style={{ color: \"#3498db\", fontSize: \"12px\" }}>sending...</div>\r\n        )\r\n      }\r\n      {\r\n        status === \"error\" && (\r\n          <div\r\n            style={{ color: \"#e74c3c\", fontSize: \"12px\" }}\r\n            dangerouslySetInnerHTML={{ __html: 'Error' }}\r\n          />\r\n        )\r\n      }\r\n      {\r\n        status === \"success\" && (\r\n          <div\r\n            style={{ color: \"#2ecc71\", fontSize: \"12px\" }}\r\n            dangerouslySetInnerHTML={{ __html: 'Thank you for subscribing!. We will send you text message promotions & updates.' }}\r\n          />\r\n        )\r\n      }\r\n    </div >\r\n  );\r\n};\r\n\r\nconst SubscribeEmail = ({\r\n  spaceTopClass,\r\n  subscribeBtnClass,\r\n  strings,\r\n}) => {\r\n  return (\r\n    <div>\r\n      <CustomForm\r\n        spaceTopClass={spaceTopClass}\r\n        subscribeBtnClass={subscribeBtnClass}\r\n        strings={strings}\r\n      /**\r\n      buttonLabel={strings[\"Subscribe\"]}\r\n      emailPlaceHolder={strings[\"Email address\"]}\r\n      sendingPlaceHolder={strings[\"Sending\"]}\r\n      confirmationPlaceHolder={strings[\"Subscribe confirmation\"]}\r\n      **/\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nSubscribeEmail.propTypes = {\r\n  spaceTopClass: PropTypes.string,\r\n  strings: PropTypes.object\r\n};\r\n\r\nexport default SubscribeEmail;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport SubscribeEmail from \"./sub-components/SubscribeEmail\";\r\n\r\nconst FooterNewsletter = ({\r\n  spaceBottomClass,\r\n  spaceLeftClass,\r\n  sideMenu,\r\n  colorClass,\r\n  widgetColorClass,\r\n  strings\r\n}) => {\r\n  return (\r\n    <div\r\n      className={`footer-widget ${spaceBottomClass ? spaceBottomClass : \"\"} ${\r\n        sideMenu ? \"ml-ntv5\" : spaceLeftClass ? spaceLeftClass : \"\"\r\n        } ${widgetColorClass ? widgetColorClass : \"\"}`}\r\n    >\r\n      <div className=\"footer-title\">\r\n        <h3>{strings[\"Subscribe\"]}</h3>\r\n      </div>\r\n      <div className={`subscribe-style ${colorClass ? colorClass : \"\"}`}>\r\n        <p>{strings[\"Get E-mail updates about our latest shop and special offers.\"]}</p>\r\n        {/* subscribe email */}\r\n        <SubscribeEmail mailchimpUrl=\"//xyz.list-manage.com/subscribe/post?u=6bbb9b6f5827bd842d9640c82&amp;id=05d85f18ef\" strings={strings} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nFooterNewsletter.propTypes = {\r\n  spaceBottomClass: PropTypes.string,\r\n  spaceLeftClass: PropTypes.string,\r\n  colorClass: PropTypes.string,\r\n  widgetColorClass: PropTypes.string\r\n};\r\n\r\nexport default FooterNewsletter;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll } from \"react-scroll\";\r\nimport FooterCopyright from \"../../components/footer/FooterCopyright\";\r\nimport FooterNewsletter from \"../../components/footer/FooterNewsletter\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport { connect } from \"react-redux\";\r\nconst Footer = ({\r\n  backgroundColorClass,\r\n  spaceTopClass,\r\n  spaceBottomClass,\r\n  spaceLeftClass,\r\n  spaceRightClass,\r\n  containerClass,\r\n  extraFooterClass,\r\n  sideMenu,\r\n  merchant,\r\n  strings\r\n}) => {\r\n  const [scroll, setScroll] = useState(0);\r\n  const [top, setTop] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setTop(100);\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const scrollToTop = () => {\r\n    animateScroll.scrollToTop();\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    setScroll(window.scrollY);\r\n  };\r\n\r\n  return (\r\n    <footer\r\n      className={`footer-area ${\r\n        backgroundColorClass ? backgroundColorClass : \"\"\r\n        } ${spaceTopClass ? spaceTopClass : \"\"} ${\r\n        spaceBottomClass ? spaceBottomClass : \"\"\r\n        } ${extraFooterClass ? extraFooterClass : \"\"} ${\r\n        spaceLeftClass ? spaceLeftClass : \"\"\r\n        } ${spaceRightClass ? spaceRightClass : \"\"}`}\r\n    >\r\n      <div className={`${containerClass ? containerClass : \"container\"}`}>\r\n        <div className=\"row\">\r\n          <div className={sideMenu ? \"col-xl-3 col-sm-3\" : \"col-lg-2 col-sm-3\"}>\r\n            {/* footer copyright */}\r\n            <FooterCopyright\r\n              footerLogo=\"/assets/img/logo/logo.png\"\r\n              spaceBottomClass=\"mb-30\"\r\n            />\r\n          </div>\r\n          <div className={sideMenu ? \"col-xl-3 col-sm-3\" : \"col-lg-3 col-sm-3\"}>\r\n            <div className=\"footer-widget mb-30\">\r\n              <div className=\"footer-title\">\r\n                <h3>{strings[\"Address\"]}</h3>\r\n              </div>\r\n              <div className=\"footer-list\">\r\n                {\r\n\r\n                  merchant &&\r\n                  <ul>\r\n                    <li>\r\n                      <Link to=\"\">\r\n                        {merchant.address.address}  {merchant.address.city}, {merchant.address.stateProvince},\r\n                       {merchant.address.country} <br /> {merchant.address.postalCode}\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"\">\r\n                        {strings[\"Tel\"]}: {merchant.phone}\r\n                      </Link>\r\n                    </li>\r\n                    <li>\r\n                      <Link to=\"\">\r\n                        {strings[\"E-mail\"]} : {merchant.email}\r\n                      </Link>\r\n                    </li>\r\n                  </ul>\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className={sideMenu ? \"col-xl-3 col-sm-3\" : \"col-lg-3 col-sm-3\"}>\r\n            <div className={sideMenu ? \"footer-widget mb-30\" : \"footer-widget mb-30\"} >\r\n              <div className=\"footer-title\">\r\n                <h3>{strings[\"USEFUL LINKS\"]}</h3>\r\n              </div>\r\n              <div className=\"footer-list\">\r\n                <ul>\r\n                  <li>\r\n                    <Link to={\"/contact\"}>{strings[\"Contact\"]}</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={\"/login\"}>{strings[\"Login\"]}</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={\"/register\"}>{strings[\"Register\"]}</Link>\r\n                  </li>\r\n                  {/* <li>\r\n                    <Link to={process.env.PUBLIC_URL + \"#/\"}>Returns</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={process.env.PUBLIC_URL + \"#/\"}>\r\n                      Support Policy\r\n                    </Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={process.env.PUBLIC_URL + \"#/\"}>Size guide</Link>\r\n                  </li>\r\n                  <li>\r\n                    <Link to={process.env.PUBLIC_URL + \"#/\"}>FAQs</Link>\r\n                  </li> */}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* <div\r\n            className={`${\r\n              sideMenu ? \"col-xl-3 col-sm-4\" : \"col-lg-2 col-sm-6\"\r\n              }`}\r\n          >\r\n            <div\r\n              className={`${\r\n                sideMenu\r\n                  ? \"footer-widget mb-30 ml-145\"\r\n                  : \"footer-widget mb-30 ml-75\"\r\n                }`}\r\n            >\r\n              <div className=\"footer-title\">\r\n                <h3>FOLLOW US</h3>\r\n              </div>\r\n              <div className=\"footer-list\">\r\n                <ul>\r\n                  <li>\r\n                    <a\r\n                      href=\"//www.facebook.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      Facebook\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"//www.twitter.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      Twitter\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"//www.instagram.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      Instagram\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"//www.youtube.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      Youtube\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div> */}\r\n          <div className={sideMenu ? \"col-xl-3 col-sm-8\" : \"col-lg-4 col-sm-3\"}>\r\n            {/* footer newsletter */}\r\n            <FooterNewsletter\r\n              strings={strings}\r\n              spaceBottomClass=\"mb-30\"\r\n              // spaceLeftClass=\"ml-70\"\r\n              sideMenu={sideMenu}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <button\r\n        className={`scroll-top ${scroll > top ? \"show\" : \"\"}`}\r\n        onClick={() => scrollToTop()}\r\n      >\r\n        <i className=\"fa fa-angle-double-up\"></i>\r\n      </button>\r\n    </footer>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  backgroundColorClass: PropTypes.string,\r\n  containerClass: PropTypes.string,\r\n  extraFooterClass: PropTypes.string,\r\n  sideMenu: PropTypes.bool,\r\n  spaceBottomClass: PropTypes.string,\r\n  spaceTopClass: PropTypes.string,\r\n  spaceLeftClass: PropTypes.string,\r\n  spaceRightClass: PropTypes.string\r\n};\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    merchant: state.merchantData.merchant\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(multilanguage(Footer));\r\n// export default FooterOne;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport Header from \"../wrappers/header/Header\";\r\nimport Footer from \"../wrappers/footer/Footer\";\r\n\r\nconst Layout = ({\r\n  children,\r\n  headerContainerClass,\r\n  headerTop,\r\n  headerPaddingClass,\r\n  headerPositionClass\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <Header\r\n        layout={headerContainerClass}\r\n        top={headerTop}\r\n        headerPaddingClass={headerPaddingClass}\r\n        headerPositionClass={headerPositionClass}\r\n      />\r\n      {children}\r\n      <Footer\r\n        backgroundColorClass=\"bg-gray\"\r\n        spaceTopClass=\"pt-100\"\r\n        spaceBottomClass=\"pb-70\"\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.any,\r\n  headerContainerClass: PropTypes.string,\r\n  headerPaddingClass: PropTypes.string,\r\n  headerPositionClass: PropTypes.string,\r\n  headerTop: PropTypes.string\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\n\r\nimport Swiper from \"react-id-swiper\";\r\nimport 'swiper/swiper.scss'\r\n\r\n//import { Swiper } from 'swiper/react';\r\n//import 'swiper/swiper.scss';\r\n\r\n// import { getProductCartQuantity } from \"../../helpers/product\";\r\nimport { Modal } from \"react-bootstrap\";\r\n// import Rating from \"./sub-components/ProductRating\";\r\nimport { connect } from \"react-redux\";\r\nimport WebService from '../../util/webService';\r\nimport constant from '../../util/constant';\r\nimport { setLoader } from \"../../redux/actions/loaderActions\";\r\nimport StarRatings from 'react-star-ratings';\r\nfunction ProductModal(props, strings) {\r\n  const { product, cartData, defaultStore, userData, finalproductprice, finaldiscountedprice, setLoader } = props;\r\n\r\n\r\n\r\n  const [setDiscountedPrice] = useState(finaldiscountedprice)\r\n  const [setProductPrice] = useState(finalproductprice)\r\n  const [setIsDiscount] = useState(product.discounted)\r\n\r\n  const [gallerySwiper, getGallerySwiper] = useState(null);\r\n  const [thumbnailSwiper, getThumbnailSwiper] = useState(null);\r\n  const [selectedProductColor, setSelectedProductColor] = useState([]);\r\n  // const [productStock, setProductStock] = useState();\r\n  const [quantityCount, setQuantityCount] = useState(1);\r\n  const [currentImage, setCurrentImage] = useState(defaultImage(product));\r\n  // const wishlistItem = props.wishlistitem;\r\n  // const compareItem = props.compareitem;\r\n\r\n  const addToCart = props.addtocart;\r\n  // const addToWishlist = props.addtowishlist;\r\n  // const addToCompare = props.addtocompare;\r\n\r\n  const addToast = props.addtoast;\r\n  // const cartItems = props.cartitems;\r\n\r\n  // const productCartQty = 0\r\n\r\n  useEffect(() => {\r\n    getDefualtsOption()\r\n    if (\r\n      gallerySwiper !== null &&\r\n      gallerySwiper.controller &&\r\n      thumbnailSwiper !== null &&\r\n      thumbnailSwiper.controller\r\n    ) {\r\n      gallerySwiper.controller.control = thumbnailSwiper;\r\n      thumbnailSwiper.controller.control = gallerySwiper;\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [gallerySwiper, thumbnailSwiper]);\r\n\r\n  const gallerySwiperParams = {\r\n    getSwiper: getGallerySwiper,\r\n    spaceBetween: 10,\r\n    loopedSlides: 4,\r\n    loop: false\r\n  };\r\n\r\n  const thumbnailSwiperParams = {\r\n    getSwiper: product.images.length > 4 && getThumbnailSwiper,\r\n    spaceBetween: 10,\r\n    slidesPerView: 4,\r\n    loopedSlides: 4,\r\n    touchRatio: 0.2,\r\n    freeMode: true,\r\n    loop: false,\r\n    slideToClickedSlide: true,\r\n    navigation: {\r\n      nextEl: product.images.length > 4 ? \".swiper-button-next\" : '',\r\n      prevEl: product.images.length > 4 ? \".swiper-button-prev\" : ''\r\n    },\r\n    renderPrevButton: () => (\r\n      <button className=\"swiper-button-prev ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-left\" />\r\n      </button>\r\n    ),\r\n    renderNextButton: () => (\r\n      <button className=\"swiper-button-next ht-swiper-button-nav\">\r\n        <i className=\"pe-7s-angle-right\" />\r\n      </button>\r\n    )\r\n  };\r\n  const getDefualtsOption = async () => {\r\n    let temp = [];\r\n    if (product.options) {\r\n      product.options.map(async (item) => {\r\n        item.optionValues.map(async (data) => {\r\n          if (data.defaultValue) {\r\n            temp.push({ 'name': item.name, 'id': data.id });\r\n          }\r\n        })\r\n      })\r\n      setSelectedProductColor(temp)\r\n      getPrice(temp)\r\n    }\r\n  }\r\n  const onChangeOptions = async (value, option) => {\r\n\r\n    let tempSelectedOptions = [];\r\n    let index;\r\n    if (option.type === 'radio' || option.type === 'select') {\r\n      index = selectedProductColor.findIndex(a => a.name === option.name);\r\n    } else {\r\n      index = selectedProductColor.findIndex(a => a.id === value.id);\r\n    }\r\n\r\n    if (index === -1) {\r\n      let temp = [...selectedProductColor, { 'name': option.name, 'id': value.id }]\r\n      tempSelectedOptions = temp;\r\n      setSelectedProductColor(temp)\r\n      // setSelectedProductColor([...selectedProductColor, { 'name': option.name, 'id': value.id }])\r\n    } else {\r\n      let temp = [...selectedProductColor]\r\n      if (option.type === 'radio' || option.type === 'select') {\r\n        temp[index] = { 'name': option.name, 'id': value.id };\r\n\r\n      } else {\r\n        temp.splice(index, 1);\r\n      }\r\n      tempSelectedOptions = temp;\r\n      setSelectedProductColor(temp)\r\n    }\r\n    getPrice(tempSelectedOptions)\r\n  }\r\n  const getPrice = async (tempSelectedOptions) => {\r\n    setLoader(true)\r\n    let action = constant.ACTION.PRODUCT + product.id + '/' + constant.ACTION.PRICE;\r\n    let param = { \"options\": tempSelectedOptions }\r\n    try {\r\n      let response = await WebService.post(action, param);\r\n      if (response) {\r\n        setDiscountedPrice(response.finalPrice);\r\n        setProductPrice(response.originalPrice);\r\n        setIsDiscount(response.discounted);\r\n        setLoader(false)\r\n      }\r\n    } catch (error) {\r\n      setLoader(false)\r\n    }\r\n  }\r\n  const checkedOrNot = (value) => {\r\n    let index = selectedProductColor.findIndex(a => a.id === value.id);\r\n    if (index === -1) {\r\n      return false\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <Modal\r\n        show={props.show}\r\n        onHide={props.onHide}\r\n        className=\"product-quickview-modal-wrapper\"\r\n      >\r\n        <Modal.Header closeButton></Modal.Header>\r\n\r\n        <div className=\"modal-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-5 col-sm-12 col-xs-12\">\r\n              <div className=\"product-large-image-wrapper\">\r\n                <Swiper {...gallerySwiperParams}>\r\n                  {\r\n                  //product.images && product.images.length > 0 &&\r\n                    product.images.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\" >\r\n                            {currentImage != null &&\r\n                              <img\r\n                                src={currentImage}\r\n                                className=\"img-fluid\"\r\n                                alt=\"\"\r\n                              />\r\n                            }\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n              <div className=\"product-small-image-wrapper mt-15\">\r\n                <Swiper {...thumbnailSwiperParams}>\r\n                  {\r\n                  //product.images && product.images.length > 1 &&\r\n                    product.images.map((single, key) => {\r\n                      return (\r\n                        <div key={key}>\r\n                          <div className=\"single-image\">\r\n                            <img\r\n                              onClick={() => setCurrentImage(single.imageUrl)}\r\n                              src={single.imageUrl}\r\n                              className=\"img-fluid\"\r\n                              alt=\"\"\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                </Swiper>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-md-7 col-sm-12 col-xs-12\">\r\n              <div className=\"product-details-content quickview-content\">\r\n                <h2>{product.description.name}</h2>\r\n                {/*\r\n                <div className=\"product-details-price\">\r\n                  {isDiscount ? (\r\n                    <Fragment>\r\n                      <span>\r\n                        {discountedPrice}\r\n                      </span>{\" \"}\r\n                      <span className=\"old\">\r\n                        {productPrice}\r\n                      </span>\r\n                    </Fragment>\r\n                  ) : (<span>{productPrice} </span>)}\r\n                </div>\r\n                  */}\r\n\r\n                <div className=\"pro-details-rating-wrap\">\r\n                  <div className=\"pro-details-rating\">\r\n                    <StarRatings\r\n                      rating={product.rating}\r\n                      starRatedColor=\"#ffa900\"\r\n                      starDimension=\"17px\"\r\n                      starSpacing=\"1px\"\r\n                      numberOfStars={5}\r\n                      name='view-rating'\r\n                    />\r\n                    {/* <Rating ratingValue={product.rating} /> */}\r\n                  </div>\r\n                </div>\r\n                <div className=\"pro-details-list\">\r\n                  <p dangerouslySetInnerHTML={{ __html: product.description.description }}></p>\r\n                  <ul>\r\n                    <li>\r\n                      <span>Weight</span> {product.productSpecifications.weight} Pounds\r\n                    </li>\r\n                    {\r\n                      <li>\r\n                        <span>{strings[\"Package size\"]}</span>{product.productSpecifications.length}{\" \"} x {product.productSpecifications.width}{\" \"}\r\n                        x {product.productSpecifications.height} Inches{\" \"}\r\n                      </li>\r\n                    }\r\n                    {\r\n                      product.properties.map((value, i) => {\r\n                        return <li key={i}>\r\n                          <span><b>{value.property.name}</b></span> {value.propertyValue.name}\r\n                        </li>\r\n                      })\r\n                    }\r\n                  </ul>\r\n                </div>\r\n\r\n                {product.options ? (\r\n                  <div className=\"pro-details-size-color\">\r\n                    {\r\n                      product.options.map((option, key) => {\r\n                        return (\r\n                          option.type === 'radio' &&\r\n                          <div className=\"pro-details-color-wrap\" key={key}>\r\n                            <span>{option.name}</span>\r\n                            <div className=\"pro-details-color-content\" style={{ display: 'flex', flexDirection: 'column' }}>\r\n                              {\r\n\r\n                                option.optionValues.map((value, index) => {\r\n                                  return (\r\n                                    <div style={{ flexDirection: 'row', display: 'flex', alignItems: 'center', margin: 15 }} key={index}>\r\n                                      {value.image && <img src={value.image} alt=\"product-option\" />}\r\n\r\n                                      <label className={`pro-details-color-content--single`} style={{ backgroundColor: value.code }} key={index} >\r\n\r\n                                        <input\r\n                                          type={option.type}\r\n                                          value={value.id}\r\n                                          name={option.name}\r\n                                          checked={checkedOrNot(value)}\r\n                                          onChange={() => onChangeOptions(value, option)}\r\n                                        />\r\n                                        <span className=\"checkmark\"></span>\r\n                                      </label>\r\n                                      <label>{value.description.name} {value.price && '(' + value.price + ')'}</label>\r\n                                    </div>\r\n                                  );\r\n                                })\r\n                                // )\r\n                              }\r\n\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                    {\r\n\r\n                      product.options.map((option, index) => {\r\n                        return (\r\n                          option.type === 'select' &&\r\n                          <div className=\"pro-details-size\" key={index}>\r\n                            <span>{option.name}</span>\r\n                            <div className=\"pro-details-size-content\">\r\n                              {\r\n                                <select onChange={(e) => { onChangeOptions(JSON.parse(e.target.value), option) }}>\r\n                                  {/* <option>Select a country</option> */}\r\n                                  {\r\n\r\n                                    option.optionValues.map((singleSize, i) => {\r\n                                      return <option key={i} value={JSON.stringify(singleSize)} selected={checkedOrNot(singleSize)}>{singleSize.description.name} {singleSize.price && '(' + singleSize.price + ')'}</option>\r\n                                    })\r\n                                  }\r\n                                </select>\r\n\r\n                              }\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                    {\r\n\r\n                      product.options.map((option, index) => {\r\n                        return (\r\n                          option.type === 'checkbox' &&\r\n                          <div className=\"pro-details-size\" key={index}>\r\n                            <span>{option.name}</span>\r\n                            <div className=\"pro-details-size-content\" style={{ display: 'flex' }}>\r\n                              {\r\n                                option.optionValues.map((singleSize, key) => {\r\n                                  return (\r\n                                    <div style={{ flexDirection: 'column ', display: 'flex', alignItems: 'center', marginRight: 15 }} key={key}>\r\n                                      {singleSize.image && <img src={singleSize.image} alt=\"product-option\" />}\r\n\r\n                                      <label className={`pro-details-size-content--single`} key={key}  >\r\n                                        <input\r\n                                          type=\"checkbox\"\r\n                                          value={singleSize.description.name}\r\n                                          name={option.name}\r\n                                          checked={checkedOrNot(singleSize)}\r\n                                          onChange={() => {\r\n                                            onChangeOptions(singleSize, option)\r\n                                            // setSelectedProductSize(singleSize.name);\r\n                                            //   setProductStock(singleSize.stock);\r\n                                            //   setQuantityCount(1);\r\n                                          }}\r\n                                        />\r\n                                        <span className=\"size-name\">{singleSize.description.name} {singleSize.price && '(' + singleSize.price + ')'}</span>\r\n                                      </label>\r\n                                    </div>\r\n                                  );\r\n\r\n                                })}\r\n                            </div>\r\n                          </div>\r\n                        )\r\n                      })\r\n                    }\r\n                  </div>\r\n                ) : (\r\n                    \"\"\r\n                  )}\r\n                {\r\n                  //   product.affiliateLink ? (\r\n                  //   <div className=\"pro-details-quality\">\r\n                  //     <div className=\"pro-details-cart btn-hover\">\r\n                  //       <a\r\n                  //         href={product.affiliateLink}\r\n                  //         rel=\"noopener noreferrer\"\r\n                  //         target=\"_blank\"\r\n                  //       >\r\n                  //         Buy Now\r\n                  //       </a>\r\n                  //     </div>\r\n                  //   </div>\r\n                  // ) : (\r\n                  <div className=\"pro-details-quality\">\r\n                    <div className=\"cart-plus-minus\">\r\n                      <button onClick={() => setQuantityCount(quantityCount > 1 ? quantityCount - 1 : 1)} className=\"dec qtybutton\">\r\n                        -\r\n                      </button>\r\n                      <input className=\"cart-plus-minus-box\" type=\"text\" value={quantityCount} readOnly />\r\n                      <button onClick={() => setQuantityCount(quantityCount < product.quantity ? quantityCount + 1 : quantityCount)} className=\"inc qtybutton\" >\r\n                        +\r\n                      </button>\r\n                    </div>\r\n                    <div className=\"pro-details-cart btn-hover\">\r\n                      {product.available && product.canBePurchased && product.visible && product.quantity > 0 ? (\r\n                        <button\r\n                          onClick={() => {\r\n                            let options = [];\r\n                            selectedProductColor.forEach((a) => {\r\n                              options.push({ id: a.id })\r\n                            })\r\n                            addToCart(\r\n                              product,\r\n                              addToast,\r\n                              cartData,\r\n                              quantityCount,\r\n                              defaultStore,\r\n                              userData,\r\n                              options, strings\r\n                              // selectedProductColor,\r\n                              // selectedProductSize\r\n                            )\r\n                          }\r\n                          }>{/* {strings[\"Add to cart\"]} */} Add to cart</button>\r\n                      ) : (\r\n                          <button disabled>Out of Stock</button>\r\n                        )}\r\n                    </div>\r\n                    {/* <div className=\"pro-details-wishlist\">\r\n                        <button\r\n                          className={wishlistItem !== undefined ? \"active\" : \"\"}\r\n                          disabled={wishlistItem !== undefined}\r\n                          title={\r\n                            wishlistItem !== undefined\r\n                              ? \"Added to wishlist\"\r\n                              : \"Add to wishlist\"\r\n                          }\r\n                          onClick={() => addToWishlist(product, addToast)}\r\n                        >\r\n                          <i className=\"pe-7s-like\" />\r\n                        </button>\r\n                      </div> */}\r\n                    {/* <div className=\"pro-details-compare\">\r\n                        <button\r\n                          className={compareItem !== undefined ? \"active\" : \"\"}\r\n                          disabled={compareItem !== undefined}\r\n                          title={\r\n                            compareItem !== undefined\r\n                              ? \"Added to compare\"\r\n                              : \"Add to compare\"\r\n                          }\r\n                          onClick={() => addToCompare(product, addToast)}\r\n                        >\r\n                          <i className=\"pe-7s-shuffle\" />\r\n                        </button>\r\n                      </div> */}\r\n                  </div>\r\n                  // )\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nProductModal.propTypes = {\r\n  addtoast: PropTypes.func,\r\n  addtocart: PropTypes.func,\r\n  // addtocompare: PropTypes.func,\r\n  // addtowishlist: PropTypes.func,\r\n  // cartitems: PropTypes.array,\r\n  // compareitem: PropTypes.object,\r\n  // currency: PropTypes.object,\r\n  // discountedprice: PropTypes.number,\r\n  finaldiscountedprice: PropTypes.string,\r\n  finalproductprice: PropTypes.string,\r\n  onHide: PropTypes.func,\r\n  product: PropTypes.object,\r\n  show: PropTypes.bool\r\n\r\n  // wishlistitem: PropTypes.object\r\n};\r\n\r\nfunction defaultImage(product) {\r\n  if (product.images && product.images.length > 0) {\r\n    return product.images[0].imageUrl;\r\n  } else if (product.image != null) {\r\n    return product.imageUrl;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    // cartitems: state.cartData\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setLoader: (value) => {\r\n      dispatch(setLoader(value));\r\n    }\r\n  }\r\n}\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductModal);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n// import { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopCategories = ({ categories, getCategoryParams, string }) => {\r\n  return (\r\n    <div className=\"sidebar-widget\">\r\n      <h4 className=\"pro-sidebar-title\">{string[\"Categories\"]}</h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {categories.length > 0 ? (\r\n          <ul>\r\n\r\n            {categories.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div>\r\n\r\n                    {/* <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={category.id}\r\n                        name=\"category\"\r\n                        // checked={checkedOrNot(singleSize)}\r\n                        onChange={(e) => {\r\n                          getCategoryParams(\"category\", category.id);\r\n                        }}\r\n                      />\r\n                      <span className=\"checkmark\" />{category.description.name}{\" \"}\r\n                    </label> */}\r\n                    <button\r\n                      onClick={e => {\r\n                        getCategoryParams(\"category\", category);\r\n                      }}> {category.description.name}\r\n                    </button>\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n            \"No categories found\"\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopCategories.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopCategories;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n// import { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopColor = ({ string, colors, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-30\">\r\n      <h4 className=\"pro-sidebar-title\">{string[\"Color\"]}</h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {colors.length > 0 ? (\r\n          <ul>\r\n            {colors.map((color, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={color.value}\r\n                        name=\"color\"\r\n                        // checked={checkedOrNot(singleSize)}\r\n                        onChange={() => {\r\n                          getSortParams(\"color\", color.value);\r\n                        }}\r\n                      />\r\n                      <span className=\"checkmark\" />{color.name}{\" \"}\r\n                    </label>\r\n                    {/* <button\r\n                      onClick={e => {\r\n                        getSortParams(\"optionValues\", color.value);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      <span className=\"checkmark\" /> {color.name}{\" \"}\r\n                    </button> */}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n            \"No colors found\"\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopColor.propTypes = {\r\n  colors: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopColor;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n// import { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopSize = ({ string, sizes, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-30\">\r\n      <h4 className=\"pro-sidebar-title\">{string[\"Size\"]}</h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {sizes.length > 0 ? (\r\n          <ul>\r\n            {sizes.map((size, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={size.value}\r\n                        name=\"size\"\r\n                        // checked={checkedOrNot(singleSize)}\r\n                        onChange={() => {\r\n                          getSortParams(\"size\", size.value);\r\n                        }}\r\n                      />\r\n                      <span className=\"checkmark\" />{size.name}{\" \"}\r\n                    </label>\r\n                    {/* <button\r\n                      className=\"text-uppercase\"\r\n                      onClick={e => {\r\n                        getSortParams(\"optionValues\", size.value);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" />\r\n                      {size.name}{\" \"}\r\n                    </button> */}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n            \"No sizes found\"\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSize.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  sizes: PropTypes.array\r\n};\r\n\r\nexport default ShopSize;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n// import { setActiveSort } from \"../../helpers/product\";\r\n\r\nconst ShopManufacture = ({ string, manufactures, getSortParams }) => {\r\n  return (\r\n    <div className=\"sidebar-widget mt-30\">\r\n      <h4 className=\"pro-sidebar-title\">{string[\"Styles\"]}</h4>\r\n      <div className=\"sidebar-widget-list mt-20\">\r\n        {manufactures.length > 0 ? (\r\n          <ul>\r\n            {manufactures.map((category, key) => {\r\n              return (\r\n                <li key={key}>\r\n                  <div className=\"sidebar-widget-list-left\">\r\n                    <label>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        value={category.id}\r\n                        name=\"manufacture\"\r\n                        // checked={checkedOrNot(singleSize)}\r\n                        onChange={() => {\r\n                          getSortParams(\"manufacturer\", category.id);\r\n                        }}\r\n                      />\r\n                      <span className=\"checkmark\" />{category.description.name}{\" \"}\r\n                    </label>\r\n                    {/* <button\r\n                      onClick={e => {\r\n                        getSortParams(\"manufacturer\", category.id);\r\n                        setActiveSort(e);\r\n                      }}\r\n                    >\r\n                      {\" \"}\r\n                      <span className=\"checkmark\" /> {category.description.name}{\" \"}\r\n                    </button> */}\r\n                  </div>\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n        ) : (\r\n            \"No manufactures found\"\r\n          )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopManufacture.propTypes = {\r\n  categories: PropTypes.array,\r\n  getSortParams: PropTypes.func\r\n};\r\n\r\nexport default ShopManufacture;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n// import {\r\n//   getIndividualCategories,\r\n//   getIndividualTags,\r\n//   getIndividualColors,\r\n//   getProductsIndividualSizes\r\n// } from \"../../helpers/product\";\r\n// import ShopSearch from \"../../components/product/ShopSearch\";\r\nimport ShopCategories from \"../../components/product/ShopCategories\";\r\nimport ShopColor from \"../../components/product/ShopColor\";\r\nimport ShopSize from \"../../components/product/ShopSize\";\r\n// import ShopTag from \"../../components/product/ShopTag\";\r\nimport ShopManufacture from \"../../components/product/ShopManufacture\";\r\n\r\nconst ShopSidebar = ({ string, getCategoryParams, getSortParams, sideSpaceClass, uniqueCategories, uniqueColors, uniqueSizes, uniqueManufacture }) => {\r\n  // const uniqueCategories = getIndividualCategories(products);\r\n  // const uniqueColors = getIndividualColors(products);\r\n  // const uniqueSizes = getProductsIndividualSizes(products);\r\n  // const uniqueTags = getIndividualTags(products);\r\n  // debugger\r\n  return (\r\n    <div className={`sidebar-style ${sideSpaceClass ? sideSpaceClass : \"\"}`}>\r\n      {/* shop search */}\r\n      {/* <ShopSearch strings={strings} /> */}\r\n\r\n      {/* filter by categories */}\r\n      {\r\n        uniqueCategories.length > 0 &&\r\n        <ShopCategories string={string} categories={uniqueCategories} getCategoryParams={getCategoryParams} />\r\n      }\r\n\r\n\r\n      {/* filter by manufacture */}\r\n      {\r\n        uniqueManufacture.length > 0 &&\r\n        <ShopManufacture string={string} manufactures={uniqueManufacture} getSortParams={getSortParams} />\r\n      }\r\n\r\n\r\n      {/* filter by color */}\r\n      {\r\n        uniqueColors.length > 0 &&\r\n        <ShopColor string={string} colors={uniqueColors} getSortParams={getSortParams} />\r\n      }\r\n\r\n\r\n      {/* filter by size */}\r\n      {\r\n        uniqueSizes.length > 0 &&\r\n        <ShopSize string={string} sizes={uniqueSizes} getSortParams={getSortParams} />\r\n      }\r\n\r\n\r\n      {/* filter by tag */}\r\n      {/* <ShopTag tags={uniqueTags} getSortParams={getSortParams} /> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nShopSidebar.propTypes = {\r\n  getSortParams: PropTypes.func,\r\n  products: PropTypes.array,\r\n  sideSpaceClass: PropTypes.string\r\n};\r\n\r\nexport default ShopSidebar;\r\n","// get products\r\nexport const getProducts = (products, category, type, limit) => {\r\n  const finalProducts = category\r\n    ? products.filter(\r\n        product => product.category.filter(single => single === category)[0]\r\n      )\r\n    : products;\r\n\r\n  if (type && type === \"new\") {\r\n    const newProducts = finalProducts.filter(single => single.new);\r\n    return newProducts.slice(0, limit ? limit : newProducts.length);\r\n  }\r\n  if (type && type === \"bestSeller\") {\r\n    return finalProducts\r\n      .sort((a, b) => {\r\n        return b.saleCount - a.saleCount;\r\n      })\r\n      .slice(0, limit ? limit : finalProducts.length);\r\n  }\r\n  if (type && type === \"saleItems\") {\r\n    const saleItems = finalProducts.filter(\r\n      single => single.discount && single.discount > 0\r\n    );\r\n    return saleItems.slice(0, limit ? limit : saleItems.length);\r\n  }\r\n  return finalProducts.slice(0, limit ? limit : finalProducts.length);\r\n};\r\n\r\n// get product discount price\r\nexport const getDiscountPrice = (price, discount) => {\r\n  return discount && discount > 0 ? price - price * (discount / 100) : null;\r\n};\r\n\r\n// get product cart quantity\r\nexport const getProductCartQuantity = (cartItems, product, color, size) => {\r\n  let productInCart = cartItems.filter(\r\n    single =>\r\n      single.id === product.id &&\r\n      (single.selectedProductColor\r\n        ? single.selectedProductColor === color\r\n        : true) &&\r\n      (single.selectedProductSize ? single.selectedProductSize === size : true)\r\n  )[0];\r\n  if (cartItems.length >= 1 && productInCart) {\r\n    if (product.variation) {\r\n      return cartItems.filter(\r\n        single =>\r\n          single.id === product.id &&\r\n          single.selectedProductColor === color &&\r\n          single.selectedProductSize === size\r\n      )[0].quantity;\r\n    } else {\r\n      return cartItems.filter(single => product.id === single.id)[0].quantity;\r\n    }\r\n  } else {\r\n    return 0;\r\n  }\r\n};\r\n\r\n//get products based on category\r\nexport const getSortedProducts = (products, sortType, sortValue) => {\r\n  if (products && sortType && sortValue) {\r\n    if (sortType === \"category\") {\r\n      return products.filter(\r\n        product => product.category.filter(single => single === sortValue)[0]\r\n      );\r\n    }\r\n    if (sortType === \"tag\") {\r\n      return products.filter(\r\n        product => product.tag.filter(single => single === sortValue)[0]\r\n      );\r\n    }\r\n    if (sortType === \"color\") {\r\n      return products.filter(\r\n        product =>\r\n          product.variation &&\r\n          product.variation.filter(single => single.color === sortValue)[0]\r\n      );\r\n    }\r\n    if (sortType === \"size\") {\r\n      return products.filter(\r\n        product =>\r\n          product.variation &&\r\n          product.variation.filter(\r\n            single => single.size.filter(single => single.name === sortValue)[0]\r\n          )[0]\r\n      );\r\n    }\r\n    if (sortType === \"filterSort\") {\r\n      let sortProducts = [...products];\r\n      if (sortValue === \"default\") {\r\n        return sortProducts;\r\n      }\r\n      if (sortValue === \"priceHighToLow\") {\r\n        return sortProducts.sort((a, b) => {\r\n          return b.price - a.price;\r\n        });\r\n      }\r\n      if (sortValue === \"priceLowToHigh\") {\r\n        return sortProducts.sort((a, b) => {\r\n          return a.price - b.price;\r\n        });\r\n      }\r\n    }\r\n  }\r\n  return products;\r\n};\r\n\r\n// get individual element\r\nconst getIndividualItemArray = array => {\r\n  let individualItemArray = array.filter(function(v, i, self) {\r\n    return i === self.indexOf(v);\r\n  });\r\n  return individualItemArray;\r\n};\r\n\r\n// get individual categories\r\nexport const getIndividualCategories = products => {\r\n  let productCategories = [];\r\n  products &&\r\n    products.map(product => {\r\n      return (\r\n        product.category &&\r\n        product.category.map(single => {\r\n          return productCategories.push(single);\r\n        })\r\n      );\r\n    });\r\n  const individualProductCategories = getIndividualItemArray(productCategories);\r\n  return individualProductCategories;\r\n};\r\n\r\n// get individual tags\r\nexport const getIndividualTags = products => {\r\n  let productTags = [];\r\n  products &&\r\n    products.map(product => {\r\n      return (\r\n        product.tag &&\r\n        product.tag.map(single => {\r\n          return productTags.push(single);\r\n        })\r\n      );\r\n    });\r\n  const individualProductTags = getIndividualItemArray(productTags);\r\n  return individualProductTags;\r\n};\r\n\r\n// get individual colors\r\nexport const getIndividualColors = products => {\r\n  let productColors = [];\r\n  products &&\r\n    products.map(product => {\r\n      return (\r\n        product.variation &&\r\n        product.variation.map(single => {\r\n          return productColors.push(single.color);\r\n        })\r\n      );\r\n    });\r\n  const individualProductColors = getIndividualItemArray(productColors);\r\n  return individualProductColors;\r\n};\r\n\r\n// get individual sizes\r\nexport const getProductsIndividualSizes = products => {\r\n  let productSizes = [];\r\n  products &&\r\n    products.map(product => {\r\n      return (\r\n        product.variation &&\r\n        product.variation.map(single => {\r\n          return single.size.map(single => {\r\n            return productSizes.push(single.name);\r\n          });\r\n        })\r\n      );\r\n    });\r\n  const individualProductSizes = getIndividualItemArray(productSizes);\r\n  return individualProductSizes;\r\n};\r\n\r\n// get product individual sizes\r\nexport const getIndividualSizes = product => {\r\n  let productSizes = [];\r\n  product.variation &&\r\n    product.variation.map(singleVariation => {\r\n      return (\r\n        singleVariation.size &&\r\n        singleVariation.size.map(singleSize => {\r\n          return productSizes.push(singleSize.name);\r\n        })\r\n      );\r\n    });\r\n  const individualSizes = getIndividualItemArray(productSizes);\r\n  return individualSizes;\r\n};\r\n\r\nexport const setActiveSort = e => {\r\n  const filterButtons = document.querySelectorAll(\r\n    \".sidebar-widget-list-left button, .sidebar-widget-tag button, .product-filter button\"\r\n  );\r\n  filterButtons.forEach(item => {\r\n    item.classList.remove(\"active\");\r\n  });\r\n  e.currentTarget.classList.add(\"active\");\r\n};\r\n\r\nexport const setActiveLayout = e => {\r\n  const gridSwitchBtn = document.querySelectorAll(\".shop-tab button\");\r\n  gridSwitchBtn.forEach(item => {\r\n    item.classList.remove(\"active\");\r\n  });\r\n  e.currentTarget.classList.add(\"active\");\r\n};\r\n\r\nexport const toggleShopTopFilter = e => {\r\n  const shopTopFilterWrapper = document.querySelector(\r\n    \"#product-filter-wrapper\"\r\n  );\r\n  shopTopFilterWrapper.classList.toggle(\"active\");\r\n  if (shopTopFilterWrapper.style.height) {\r\n    shopTopFilterWrapper.style.height = null;\r\n  } else {\r\n    shopTopFilterWrapper.style.height =\r\n      shopTopFilterWrapper.scrollHeight + \"px\";\r\n  }\r\n  e.currentTarget.classList.toggle(\"active\");\r\n};\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport { setActiveLayout } from \"../../helpers/product\";\r\n\r\nconst ShopTopAction = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  strings,\r\n  offset,\r\n  pageLimit\r\n}) => {\r\n  return (\r\n    <div className=\"shop-top-bar mb-35\">\r\n      <div className=\"select-shoing-wrap\">\r\n        {/* <div className=\"shop-select\">\r\n          <select\r\n            onChange={e => getFilterSortParams(\"filterSort\", e.target.value)}\r\n          >\r\n            <option value=\"default\">Default</option>\r\n            <option value=\"priceHighToLow\">Price - High to Low</option>\r\n            <option value=\"priceLowToHigh\">Price - Low to High</option>\r\n          </select>\r\n        </div> */}\r\n        <p>\r\n          {strings[\"Showing\"]} {sortedProductCount < pageLimit ? productCount : sortedProductCount * offset} of {productCount} {strings[\"result\"]}\r\n        </p>\r\n      </div>\r\n\r\n      <div className=\"shop-tab\">\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid two-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th-large\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"grid three-column\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-th\" />\r\n        </button>\r\n        <button\r\n          onClick={e => {\r\n            getLayout(\"list\");\r\n            setActiveLayout(e);\r\n          }}\r\n        >\r\n          <i className=\"fa fa-list-ul\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopTopAction.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopAction;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport ShopTopAction from \"../../components/product/ShopTopAction\";\r\n\r\nconst ShopTopbar = ({\r\n  getLayout,\r\n  getFilterSortParams,\r\n  productCount,\r\n  sortedProductCount,\r\n  strings,\r\n  offset,\r\n  pageLimit\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {/* shop top action */}\r\n      <ShopTopAction\r\n        getLayout={getLayout}\r\n        getFilterSortParams={getFilterSortParams}\r\n        productCount={productCount}\r\n        strings={strings}\r\n        offset={offset}\r\n        pageLimit={pageLimit}\r\n        sortedProductCount={sortedProductCount}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nShopTopbar.propTypes = {\r\n  getFilterSortParams: PropTypes.func,\r\n  getLayout: PropTypes.func,\r\n  productCount: PropTypes.number,\r\n  sortedProductCount: PropTypes.number\r\n};\r\n\r\nexport default ShopTopbar;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\n// import { getDiscountPrice } from \"../../helpers/product\";\r\n// import Rating from \"./sub-components/ProductRating\";\r\nimport ProductModal from \"./ProductModal\";\r\nimport { setProductID } from \"../../redux/actions/productActions\";\r\nimport { connect } from \"react-redux\";\r\nimport StarRatings from 'react-star-ratings';\r\nconst ProductGridListSingle = ({\r\n  product,\r\n  // currency,\r\n  addToCart,\r\n  // addToWishlist,\r\n  // addToCompare,\r\n  cartItem,\r\n  // wishlistItem,\r\n  // compareItem,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  setProductID,\r\n  defaultStore,\r\n  userData,\r\n  strings\r\n}) => {\r\n  const [modalShow, setModalShow] = useState(false);\r\n  const { addToast } = useToasts();\r\n\r\n  // const discountedPrice = getDiscountPrice(product.price, product.discount);\r\n  const finalProductPrice = product.originalPrice;\r\n  const finalDiscountedPrice = product.finalPrice;\r\n  const onClickProductDetails = (id) => {\r\n    setProductID(id)\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div\r\n        className={`col-xl-4 col-sm-6 ${\r\n          sliderClassName ? sliderClassName : \"\"\r\n          }`}\r\n      >\r\n        <div\r\n          className={`product-wrap ${spaceBottomClass ? spaceBottomClass : \"\"}`}\r\n        >\r\n          <div className=\"product-img\">\r\n            <Link to={process.env.PUBLIC_URL + \"/product/\" + product.description.friendlyUrl} onClick={() => onClickProductDetails(product.id)}>\r\n              {\r\n                product.image && <img className=\"default-img\" src={defaultImage(product)} alt=\"\" />\r\n              }\r\n              {\r\n                product.images.length > 1 ? <img className=\"hover-img\" src={defaultImage(product)} alt=\"\" /> : <img className=\"hover-img\" src={defaultImage(product)} alt=\"\" />\r\n              }\r\n            </Link>\r\n\r\n\r\n            <div className=\"product-action\">\r\n\r\n              <div className=\"pro-same-action pro-cart\">\r\n                <Link to={\"/product/\" + product.description.friendlyUrl} onClick={() => onClickProductDetails(product.id)} title=\"Select options\">\r\n                <button>\r\n                    <span>Détails du produit</span>\r\n                </button>\r\n               </Link>\r\n\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div className=\"product-content text-center\">\r\n            <h3>\r\n              <Link to={\"/product/\" + product.description.friendlyUrl} onClick={() => onClickProductDetails(product.id)}>\r\n                {product.description.name}\r\n              </Link>\r\n            </h3>\r\n            <div className=\"product-rating\">\r\n              <StarRatings\r\n                rating={product.rating}\r\n                starRatedColor=\"#ffa900\"\r\n                starDimension=\"17px\"\r\n                starSpacing=\"1px\"\r\n                numberOfStars={5}\r\n                name='view-rating'\r\n              />\r\n              {/* <Rating ratingValue={product.rating} /> */}\r\n            </div>\r\n            {/*\r\n            <div className=\"product-price\">\r\n              {product.discounted ? (\r\n                <Fragment>\r\n                  <span>{finalDiscountedPrice}</span>{\" \"}\r\n                  <span className=\"old\">\r\n                    {finalProductPrice}\r\n                  </span>\r\n                </Fragment>\r\n              ) : (\r\n                  <span>{finalProductPrice} </span>\r\n                )}\r\n            </div>\r\n              */}\r\n          </div>\r\n        </div>\r\n        <div className=\"shop-list-wrap mb-30\">\r\n          <div className=\"row\">\r\n            <div className=\"col-xl-4 col-md-5 col-sm-6\">\r\n              <div className=\"product-list-image-wrap\">\r\n                <div className=\"product-img\">\r\n                  <Link to={\"/product/\" + product.description.friendlyUrl} onClick={() => onClickProductDetails(product.id)}>\r\n                    {\r\n                      product.image && <img className=\"default-img img-fluid\" src={product.image.imageUrl} alt=\"\" />\r\n                    }\r\n                    \r\n                    {/*product.images.length > 1 ?\r\n                      <img\r\n                        className=\"hover-img img-fluid\"\r\n                        src={product.images[1]}\r\n                        alt=\"\"\r\n                      />\r\n                      :\r\n                      <img\r\n                        className=\"hover-img img-fluid\"\r\n                        src={defaultImage(product)}\r\n                        alt=\"\"\r\n                      />\r\n                    */}\r\n                    \r\n\r\n                  </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"col-xl-8 col-md-7 col-sm-6\">\r\n              <div className=\"shop-list-content\">\r\n                <h3>\r\n                  <Link to={\"/product/\" + product.description.friendlyUrl} onClick={() => onClickProductDetails(product.id)}>\r\n                    {product.description.name}\r\n                  </Link>\r\n                </h3>\r\n                <div className=\"product-list-price\">\r\n                  {product.discounted ? (\r\n                    <Fragment>\r\n                      <span>\r\n                        {finalDiscountedPrice}\r\n                      </span>{\" \"}\r\n                      <span className=\"old\">\r\n                        {finalProductPrice}\r\n                      </span>\r\n                    </Fragment>\r\n                  ) : (\r\n                      <span>{finalProductPrice} </span>\r\n                    )}\r\n                </div>\r\n                <div className=\"rating-review\">\r\n                  <div className=\"product-list-rating\">\r\n                    <StarRatings\r\n                      rating={product.rating}\r\n                      starRatedColor=\"#ffa900\"\r\n                      starDimension=\"17px\"\r\n                      starSpacing=\"1px\"\r\n                      numberOfStars={5}\r\n                      name='view-rating'\r\n                    />\r\n                    {/* <Rating ratingValue={product.rating} /> */}\r\n                  </div>\r\n                </div>\r\n                <p dangerouslySetInnerHTML={{ __html: product.description.description }}></p>\r\n                <div className=\"shop-list-actions d-flex align-items-center\">\r\n                  <div className=\"shop-list-btn btn-hover\">\r\n\r\n                    {\r\n                      product.available && product.canBePurchased && product.visible && product.quantity > 0 ?\r\n\r\n                        (\r\n                          // product, addToast, cartItem, 1, defaultStore\r\n                          <button\r\n                            onClick={() => addToCart(product, addToast, cartItem, 1, defaultStore, userData)}\r\n                            title={strings[\"Add to cart\"]}> {\" \"} <i className=\"pe-7s-cart\"></i>{\" \"} {strings[\"Add to cart\"]}\r\n                          </button>\r\n                        )\r\n                        :\r\n                        (\r\n                          <button disabled className=\"active\">\r\n                            {strings[\"Out of Stock\"]}\r\n                          </button>\r\n                        )\r\n                    }\r\n\r\n                    {/* )} */}\r\n                  </div>\r\n\r\n\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* product modal */}\r\n      <ProductModal\r\n        show={modalShow}\r\n        onHide={() => setModalShow(false)}\r\n        product={product}\r\n        defaultStore={defaultStore}\r\n        finalproductprice={finalProductPrice}\r\n        finaldiscountedprice={finalDiscountedPrice}\r\n        addtocart={addToCart}\r\n\r\n        cartData={cartItem}\r\n        userData={userData}\r\n        addtoast={addToast}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGridListSingle.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  // addToCompare: PropTypes.func,\r\n  // addToWishlist: PropTypes.func,\r\n  // cartItem: PropTypes.object,\r\n  // compareItem: PropTypes.object,\r\n  // currency: PropTypes.object,\r\n  product: PropTypes.object,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string,\r\n  // wishlistItem: PropTypes.object\r\n};\r\n\r\nfunction defaultImage(product) {\r\n  if(product.images && product.images.length > 0) {\r\n    return product.images[0].imageUrl;\r\n  } else if(product.image != null) {\r\n    return product.imageUrl;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    defaultStore: state.merchantData.defaultStore\r\n  };\r\n};\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setProductID: (value) => {\r\n      dispatch(setProductID(value));\r\n    }\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGridListSingle);\r\n// export default ProductGridListSingle;","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { addToCart } from \"../../redux/actions/cartActions\";\r\nimport ProductGridListSingle from \"../../components/product/ProductGridListSingle\";\r\nimport { isValidObject } from \"../../util/helper\";\r\nconst ProductGrid = ({\r\n  products,\r\n  addToCart,\r\n  cartItems,\r\n  sliderClassName,\r\n  spaceBottomClass,\r\n  userData,\r\n  strings\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      {products.map(product => {\r\n        return (\r\n          <ProductGridListSingle\r\n            sliderClassName={sliderClassName}\r\n            spaceBottomClass={spaceBottomClass}\r\n            product={product}\r\n            strings={strings}\r\n            addToCart={addToCart}\r\n            cartItem={cartItems}\r\n            userData={userData}\r\n            key={product.id}\r\n          />\r\n        );\r\n      })}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nProductGrid.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.object,\r\n  products: PropTypes.array,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    cartItems: state.cartData.cartItems,\r\n    userData: state.userData.userData\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n\r\n    addToCart: (\r\n      item,\r\n      addToast,\r\n      cartData,\r\n      quantityCount,\r\n      defaultStore,\r\n      userData,\r\n      selectedProductColor\r\n    ) => {\r\n      let index = isValidObject(cartData) ? cartData.products.findIndex(order => order.id === item.id) : -1;\r\n      dispatch(\r\n        addToCart(\r\n          item,\r\n          addToast,\r\n          cartData.code,\r\n          index === -1 ? quantityCount : cartData.products[index].quantity + quantityCount,\r\n          defaultStore,\r\n          userData,\r\n          selectedProductColor\r\n        )\r\n      );\r\n    },\r\n    // addToWishlist: (item, addToast) => {\r\n    //   dispatch(addToWishlist(item, addToast));\r\n    // },\r\n    // addToCompare: (item, addToast) => {\r\n    //   dispatch(addToCompare(item, addToast));\r\n    // }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProductGrid);\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport ProductgridList from \"./ProductgridList\";\r\n\r\nconst ShopProducts = ({ products, layout, strings }) => {\r\n  return (\r\n    <div className=\"shop-bottom-area mt-35\">\r\n      <div className={`row ${layout ? layout : \"\"}`}>\r\n        <ProductgridList products={products} strings={strings} spaceBottomClass=\"mb-25\" />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nShopProducts.propTypes = {\r\n  layout: PropTypes.string,\r\n  products: PropTypes.array\r\n};\r\n\r\nexport default ShopProducts;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from 'react';\r\nimport MetaTags from 'react-meta-tags';\r\nimport { useHistory } from \"react-router-dom\";\r\n// import Paginator from 'react-hooks-paginator';\r\nimport { BreadcrumbsItem } from 'react-breadcrumbs-dynamic';\r\nimport { connect } from 'react-redux';\r\n// import { getSortedProducts } from '../../helpers/product';\r\nimport Layout from '../../layouts/Layout';\r\nimport Breadcrumb from '../../wrappers/breadcrumb/Breadcrumb';\r\nimport ShopSidebar from '../../wrappers/product/ShopSidebar';\r\nimport ShopTopbar from '../../wrappers/product/ShopTopbar';\r\nimport ShopProducts from '../../wrappers/product/ShopProducts';\r\nimport WebService from '../../util/webService';\r\nimport constant from '../../util/constant';\r\nimport { isCheckValueAndSetParams } from '../../util/helper';\r\nimport { setLoader } from \"../../redux/actions/loaderActions\";\r\nimport { multilanguage } from \"redux-multilanguage\";\r\nimport { setCategoryID } from \"../../redux/actions/productActions\";\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst Category = ({ setCategoryID, isLoading, strings, location, defaultStore, currentLanguageCode, categoryID, setLoader, }) => {\r\n    const [layout, setLayout] = useState('grid three-column');\r\n    const history = useHistory();\r\n    // const [sortType, setSortType] = useState('');\r\n    const [categoryValue, setCategoryValue] = useState('');\r\n    // const [filterSortType, setFilterSortType] = useState('');\r\n    // const [filterSortValue, setFilterSortValue] = useState('');\r\n    const [offset, setOffset] = useState(0);\r\n    // const [skip, setSkip] = useState(0);\r\n    const [currentPage, setCurrentPage] = useState(0);\r\n    const pageLimit = parseInt(window._env_.APP_PRODUCT_GRID_LIMIT) || 12;\r\n    const [productData, setProductData] = useState([]);\r\n    const [totalProduct, setTotalProduct] = useState(0);\r\n    const [productDetails, setProductDetails] = useState('');\r\n    const [subCategory, setSubCategory] = useState([]);\r\n    const [manufacture, setManufacture] = useState([]);\r\n    const [color, setColor] = useState([]);\r\n    const [size, setSize] = useState([]);\r\n    const [selectedOption, setSelectedOption] = useState([]);\r\n    const [selectedManufature, setSelectedManufature] = useState([]);\r\n    // const [sortedProducts, setSortedProducts] = useState([]);\r\n\r\n    const { pathname } = location;\r\n\r\n    const getLayout = (layout) => {\r\n        setLayout(layout)\r\n    }\r\n\r\n    const getSortParams = (sortType, sortValue) => {\r\n        // console.log(sortType)\r\n        let tempSelectedOption = selectedOption;\r\n        let tempSelectedManufature = selectedManufature;\r\n        if (sortType === 'size' || sortType === 'color') {\r\n            let index = selectedOption.findIndex(a => a === sortValue);\r\n            // console.log(index)\r\n            if (index === -1) {\r\n                tempSelectedOption = [...selectedOption, sortValue]\r\n            } else {\r\n                tempSelectedOption.splice(index, 1);\r\n            }\r\n            // console.log(tempSelectedSize)\r\n            setSelectedOption(tempSelectedOption)\r\n        }\r\n        else if (sortType === 'manufacturer') {\r\n            let index = selectedManufature.findIndex(a => a === sortValue);\r\n            // console.log(index)\r\n            if (index === -1) {\r\n                tempSelectedManufature = [...selectedManufature, sortValue]\r\n            } else {\r\n                tempSelectedManufature.splice(index, 1);\r\n            }\r\n            // console.log(tempSelectedSize)\r\n            setSelectedManufature(tempSelectedManufature)\r\n        }\r\n        // console.log(categoryValue, tempSelectedOption, selectedManufature)\r\n        getProductList(categoryValue, tempSelectedOption, tempSelectedManufature)\r\n    }\r\n\r\n    const getCategoryParams = (sortType, sortValue) => {\r\n        //console.log('Sort type ' + sortType);\r\n        //console.log('Sort calue ' +sortValue);\r\n        // setCategoryValue(sortValue)\r\n        setCategoryID(sortValue.id)\r\n        history.push(\"/category/\" + sortValue.description.friendlyUrl)\r\n        // getProductList(categoryValue, selectedOption, selectedManufature)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        setCategoryValue(categoryID)\r\n        setSubCategory([])\r\n        setColor([])\r\n        setManufacture([])\r\n        setSize([])\r\n        setSelectedManufature([])\r\n        setSelectedOption([])\r\n        getProductList(categoryID, [], [])\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [categoryID, offset]);\r\n    const getProductList = async (categoryid, size, manufacture) => {\r\n        setLoader(true)\r\n        // setProductData([]);\r\n        // let action = `${constant.ACTION.PRODUCTS} + '?store=' + defaultStore + '&lang=' + currentLanguageCode + '&start=' + offset + '&count=' + pageLimit + '&category=' + categoryID`;\r\n        let action = `${constant.ACTION.PRODUCTS}?${isCheckValueAndSetParams('store=', defaultStore)}${isCheckValueAndSetParams('&lang=', currentLanguageCode)}${isCheckValueAndSetParams('&page=', offset)}${isCheckValueAndSetParams('&count=', pageLimit)}${isCheckValueAndSetParams('&category=', categoryid)}${isCheckValueAndSetParams('&optionValues=', size.join())}${isCheckValueAndSetParams('&manufacturer=', manufacture.join())}`;\r\n        try {\r\n            let response = await WebService.get(action);\r\n            if (response) {\r\n                setCurrentPage(response.totalPages)\r\n                setProductData(response.products);\r\n                setTotalProduct(response.recordsTotal)\r\n            }\r\n            setLoader(false)\r\n        } catch (error) {\r\n            setLoader(false)\r\n        }\r\n\r\n        getCategoryDetails(categoryid)\r\n    }\r\n    const getCategoryDetails = async (categoryid) => {\r\n        let action = constant.ACTION.CATEGORY + categoryid + '?store=' + defaultStore + '&lang=' + currentLanguageCode;\r\n        try {\r\n            let response = await WebService.get(action);\r\n            // console.log(response.children);\r\n            if (response) {\r\n                //console.log(response);\r\n                history.push(response.description.friendlyUrl)\r\n                setProductDetails(response);\r\n                // let temp = response.children;\r\n                // console.log(temp)\r\n                setSubCategory(response.children);\r\n            }\r\n        } catch (error) {\r\n        }\r\n        getManufacturers(categoryid)\r\n    }\r\n    const getManufacturers = async (categoryid) => {\r\n        let action = constant.ACTION.CATEGORY + categoryid + '/' + constant.ACTION.MANUFACTURERS + '?store=' + defaultStore + '&lang=' + currentLanguageCode\r\n        try {\r\n            let response = await WebService.get(action);\r\n            if (response) {\r\n                setManufacture(response.sort())\r\n            }\r\n        } catch (error) {\r\n        }\r\n        getVariants(categoryid)\r\n    }\r\n    const getVariants = async (categoryid) => {\r\n        let action = constant.ACTION.CATEGORY + categoryid + '/' + constant.ACTION.VARIANTS + '?store=' + defaultStore + '&lang=' + currentLanguageCode;\r\n        try {\r\n            let response = await WebService.get(action);\r\n\r\n            if (response) {\r\n                response.forEach(variant => {\r\n                    if (variant.code === 'color') {\r\n                        setColor(variant.options);\r\n                    } else if (variant.code === \"size\") {\r\n                        setSize(variant.options.reverse());\r\n                    }\r\n                });\r\n\r\n            }\r\n        } catch (error) {\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <MetaTags>\r\n                <title>{productDetails && productDetails.description.title}</title>\r\n                <meta name=\"description\" content={productDetails && productDetails.description.metaDescription} />\r\n            </MetaTags>\r\n\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + '/'}>{strings[\"Home\"]}</BreadcrumbsItem>\r\n            {productDetails && productDetails.parent !== null && <BreadcrumbsItem onClick={() => setCategoryID(productDetails.parent.id)} to={\"/category/\" + productDetails.parent.code}>{productDetails.parent.code}</BreadcrumbsItem>}\r\n            <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>{productDetails && productDetails.description.name}</BreadcrumbsItem>\r\n\r\n            <Layout headerContainerClass=\"container-fluid\"\r\n                headerPaddingClass=\"header-padding-2\"\r\n                headerTop=\"visible\">\r\n                {/* breadcrumb */}\r\n                <Breadcrumb />\r\n\r\n                <div className=\"shop-area pt-95 pb-100\">\r\n                    <div className=\"container\">\r\n                        {\r\n                            productData.length > 0 ?\r\n                                (<div className=\"row\">\r\n                                    <div className=\"col-lg-3 order-2 order-lg-1\">\r\n                                        {/* shop sidebar */}\r\n                                        {/* <ShopSidebar products={products} getSortParams={getSortParams} sideSpaceClass=\"mr-30\" /> */}\r\n                                        <ShopSidebar string={strings} getSortParams={getSortParams} getCategoryParams={getCategoryParams} uniqueCategories={subCategory} uniqueColors={color} uniqueSizes={size} uniqueManufacture={manufacture} sideSpaceClass=\"mr-30\" />\r\n                                    </div>\r\n                                    <div className=\"col-lg-9 order-1 order-lg-2\">\r\n                                        {/* shop topbar default */}\r\n                                        {/* <ShopTopbar getLayout={getLayout} getFilterSortParams={getFilterSortParams} productCount={products.length} sortedProductCount={productData.length} /> */}\r\n                                        <ShopTopbar strings={strings} getLayout={getLayout} productCount={totalProduct} offset={offset + 1} pageLimit={pageLimit} sortedProductCount={productData.length} />\r\n\r\n                                        {/* shop page content default */}\r\n                                        <ShopProducts strings={strings} layout={layout} products={productData} />\r\n\r\n                                        {/* shop product pagination */}\r\n\r\n\r\n                                        <div className=\"pro-pagination-style text-center mt-30\">\r\n                                            <ReactPaginate\r\n                                                previousLabel={'«'}\r\n                                                nextLabel={'»'}\r\n                                                breakLabel={'...'}\r\n                                                breakClassName={'break-me'}\r\n                                                pageCount={currentPage}\r\n                                                onPageChange={(e) => setOffset(e.selected)}\r\n                                                containerClassName={'mb-0 mt-0'}\r\n                                                activeClassName={'page-item active'}\r\n                                            />\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                </div>)\r\n                                :\r\n                                (\r\n                                    !isLoading && <div className=\"col-lg-12\">\r\n                                        <div className=\"item-empty-area text-center\">\r\n                                            <div className=\"item-empty-area__icon mb-30\">\r\n                                                <i className=\"pe-7s-shopbag\"></i>\r\n                                            </div>\r\n                                            <div className=\"item-empty-area__text\">\r\n                                                {strings[\"No items found in category\"]}<br />{\" \"}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>)\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </Layout>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nCategory.propTypes = {\r\n    location: PropTypes.object,\r\n    products: PropTypes.array\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n\r\n    return {\r\n        currentLanguageCode: state.multilanguage.currentLanguageCode,\r\n        defaultStore: state.merchantData.defaultStore,\r\n        categoryID: state.productData.categoryid,\r\n        isLoading: state.loading.isLoading\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        setLoader: (value) => {\r\n            dispatch(setLoader(value));\r\n        },\r\n        setCategoryID: (value) => {\r\n            dispatch(setCategoryID(value));\r\n        },\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(multilanguage(Category));"],"sourceRoot":""}