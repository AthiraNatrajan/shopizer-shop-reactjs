# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#


version: 2.1

orbs:
  slack: circleci/slack@3.4.2
  aws-cli: circleci/aws-cli@2.0.3

# Define the jobs we want to run for this project
jobs:
  build-job:
    working_directory: ~/project
    docker:
      # replace with your preferred image
      - image: node:12.8.0
    steps:
       - checkout
       - run: |
           ls -al
       # Restore local dependencies from cache
       - restore_cache:
          keys:
            - dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
            - dependencies-{{ .Environment.CACHE_VERSION }}
       - run:
            name: Install local dependencies
            command: npm ci --silent
       - run:
            name: Build
            command: npm run build
       - run:
            name: Environment config
            command: cp env-config.js ./build
       # Cache local dependencies if they don't exist - test
       - save_cache:
            key: dependencies-{{ .Environment.CACHE_VERSION }}-{{ checksum "package.json" }}
            paths:
                - node_modules
       #- run:
       #     name: Linting
       #     command: npm run lint
       # Cache the dist folder for the deploy job
       - persist_to_workspace:
          root: .
          paths:
            - build/*

  # The deploy job
  deploy:
    working_directory: ~/project
    executor: aws-cli/default
    steps:
      - attach_workspace:
          at: .
       # start proprietary DB using private Docker image
       # with credentials stored in the UI
      - run: |
          ls -al
      - aws-cli/setup:
          profile-name: circleci
      #TODO bucket in environment
      - run: aws s3 sync build s3://perfectogaz-shop/ --region ca-central-1 --delete --profile circleci
      - slack/status:
          fail_only: false
          webhook: $SLACK_SHOP_WEBHOOK

# Orchestrate our job run sequence
workflows:
  build_and_deploy:
    jobs:
      - build-job
      - deploy:
          requires:
            - build-job
          filters:
              branches:
                only:
                  - perfecto